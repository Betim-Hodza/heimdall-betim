name: CI - Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      cpp_standard:
        description: 'C++ Standard to test'
        required: false
        default: 'all'
        type: choice
        options:
        - all
        - 11
        - 23
      compiler:
        description: 'Compiler to use'
        required: false
        default: 'all'
        type: choice
        options:
        - all
        - gcc
        - clang

env:
  # Test configuration
  CTEST_OUTPUT_ON_FAILURE: 1
  CTEST_PARALLEL_LEVEL: 2

jobs:
  # C++11 Build and Test
  cpp11-gcc:
    name: C++11 GCC Build & Test
    runs-on: ubuntu-22.04
    if: github.event_name == 'workflow_dispatch' && (github.event.inputs.cpp_standard == 'all' || github.event.inputs.cpp_standard == '11' || github.event.inputs.compiler == 'all' || github.event.inputs.compiler == 'gcc') || github.event_name != 'workflow_dispatch'
    env:
      BUILD_DIR: build-gcc-cpp11
    strategy:
      matrix:
        cpp_standard: [11]
        compiler: [gcc]
    container:
      image: ghcr.io/heimdall-sbom/heimdall-devcontainer:latest
      options: --user root
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Environment
        run: |
          # The devcontainer image already has all dependencies installed
          # Just set up the environment variables for the build
          echo "LLVM_CONFIG=/usr/bin/llvm-config-19" >> $GITHUB_ENV
          echo "LLVM_VERSION=19" >> $GITHUB_ENV
          echo "CC=gcc" >> $GITHUB_ENV
          echo "CXX=g++" >> $GITHUB_ENV

      - name: Build C++11 with GCC
        run: |
          ./scripts/build.sh --standard 11 --compiler gcc --clean --tests

      - name: Run Unit Tests
        run: |
          cd $BUILD_DIR
          ctest --output-on-failure --verbose

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-cpp11-gcc
          path: $BUILD_DIR/Testing/
          retention-days: 7

  cpp11-clang:
    name: C++11 Clang Build & Test
    runs-on: ubuntu-22.04
    if: github.event_name == 'workflow_dispatch' && (github.event.inputs.cpp_standard == 'all' || github.event.inputs.cpp_standard == '11' || github.event.inputs.compiler == 'all' || github.event.inputs.compiler == 'clang') || github.event_name != 'workflow_dispatch'
    env:
      BUILD_DIR: build-clang-cpp11
    strategy:
      matrix:
        cpp_standard: [11]
        compiler: [clang]
    container:
      image: ghcr.io/heimdall-sbom/heimdall-devcontainer:latest
      options: --user root
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Environment
        run: |
          # The devcontainer image already has all dependencies installed
          # Just set up the environment variables for the build
          echo "LLVM_CONFIG=/usr/bin/llvm-config-19" >> $GITHUB_ENV
          echo "LLVM_VERSION=19" >> $GITHUB_ENV
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV

      - name: Build C++11 with Clang
        run: |
          ./scripts/build.sh --standard 11 --compiler clang --clean --tests

      - name: Run Unit Tests
        run: |
          cd $BUILD_DIR
          ctest --output-on-failure --verbose

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-cpp11-clang
          path: $BUILD_DIR/Testing/
          retention-days: 7

  # C++23 Build and Test
  cpp23-gcc:
    name: C++23 GCC Build & Test
    runs-on: ubuntu-22.04
    if: github.event_name == 'workflow_dispatch' && (github.event.inputs.cpp_standard == 'all' || github.event.inputs.cpp_standard == '23' || github.event.inputs.compiler == 'all' || github.event.inputs.compiler == 'gcc') || github.event_name != 'workflow_dispatch'
    env:
      BUILD_DIR: build-gcc-cpp23
    strategy:
      matrix:
        cpp_standard: [23]
        compiler: [gcc]
    container:
      image: ghcr.io/heimdall-sbom/heimdall-devcontainer:latest
      options: --user root
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Environment
        run: |
          # The devcontainer image already has GCC 13 and LLVM 19 installed
          # For C++23, we'll use the available GCC 13 and LLVM 19
          echo "LLVM_CONFIG=/usr/bin/llvm-config-19" >> $GITHUB_ENV
          echo "LLVM_VERSION=19" >> $GITHUB_ENV
          echo "CC=gcc-13" >> $GITHUB_ENV
          echo "CXX=g++-13" >> $GITHUB_ENV

      - name: Build C++23 with GCC
        run: |
          ./scripts/build.sh --standard 23 --compiler gcc --clean --tests

      - name: Run Unit Tests
        run: |
          cd $BUILD_DIR
          ctest --output-on-failure --verbose

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-cpp23-gcc
          path: $BUILD_DIR/Testing/
          retention-days: 7

  cpp23-clang:
    name: C++23 Clang Build & Test
    runs-on: ubuntu-22.04
    if: github.event_name == 'workflow_dispatch' && (github.event.inputs.cpp_standard == 'all' || github.event.inputs.cpp_standard == '23' || github.event.inputs.compiler == 'all' || github.event.inputs.compiler == 'clang') || github.event_name != 'workflow_dispatch'
    env:
      BUILD_DIR: build-clang-cpp23
    strategy:
      matrix:
        cpp_standard: [23]
        compiler: [clang]
    container:
      image: ghcr.io/heimdall-sbom/heimdall-devcontainer:latest
      options: --user root
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Environment
        run: |
          # The devcontainer image already has LLVM 19 installed
          # For C++23, we'll use the available LLVM 19
          echo "LLVM_CONFIG=/usr/bin/llvm-config-19" >> $GITHUB_ENV
          echo "LLVM_VERSION=19" >> $GITHUB_ENV
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV

      - name: Build C++23 with Clang
        run: |
          ./scripts/build.sh --standard 23 --compiler clang --clean --tests

      - name: Run Unit Tests
        run: |
          cd $BUILD_DIR
          ctest --output-on-failure --verbose

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-cpp23-clang
          path: $BUILD_DIR/Testing/
          retention-days: 7

  # Build Examples
  examples:
    name: Build Examples
    runs-on: ubuntu-22.04
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    env:
      BUILD_DIR: build-gcc-cpp17
    container:
      image: ghcr.io/heimdall-sbom/heimdall-devcontainer:latest
      options: --user root
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Environment
        run: |
          # The devcontainer image already has all build dependencies
          echo "LLVM_CONFIG=/usr/bin/llvm-config-19" >> $GITHUB_ENV
          echo "LLVM_VERSION=19" >> $GITHUB_ENV
          echo "CC=gcc" >> $GITHUB_ENV
          echo "CXX=g++" >> $GITHUB_ENV

      - name: Build Main Project
        run: |
          ./scripts/build.sh --standard 17 --compiler gcc --clean

      - name: Build Examples
        run: |
          ./scripts/build.sh --standard 17 --compiler gcc --examples

      - name: Upload Example Builds
        uses: actions/upload-artifact@v4
        with:
          name: example-builds
          path: examples/*/build-*/
          retention-days: 7

  # Summary Job
  summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [cpp11-gcc, cpp11-clang, cpp23-gcc, cpp23-clang, examples]
    if: always()
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build Status Summary
        run: |
          echo "## Build and Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Configuration | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|---------------|--------|" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.cpp11-gcc.result }}" == "success" ]; then
            echo "| C++11 GCC | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| C++11 GCC | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.cpp11-clang.result }}" == "success" ]; then
            echo "| C++11 Clang | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| C++11 Clang | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.cpp23-gcc.result }}" == "success" ]; then
            echo "| C++23 GCC | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| C++23 GCC | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.cpp23-clang.result }}" == "success" ]; then
            echo "| C++23 Clang | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| C++23 Clang | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
          fi
       
