key,rule,severity,type,component,project,file_path,line,message,status,effort,debt,author,tags,creationDate,updateDate,closeDate
AZf0SG4EamoZJ6FAQuVG,cpp:S3539,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/DWARFExtractor.hpp,Heimdall-SBOM_heimdall,src/common/DWARFExtractor.hpp,168,Remove this access specifier; it does not affect any declaration.,OPEN,2min,2min,tbakker@example.com,"clumsy,redundant",2025-07-10T12:18:31+0000,2025-07-10T12:18:31+0000,
AZf0SGu2amoZJ6FAQuU1,cpp:S1659,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:examples/heimdall-usage-cyclonedx-example/main.cpp,Heimdall-SBOM_heimdall,examples/heimdall-usage-cyclonedx-example/main.cpp,15,Define each identifier in a dedicated statement.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,convention",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SGu2amoZJ6FAQuU2,cpp:S1659,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:examples/heimdall-usage-cyclonedx-example/main.cpp,Heimdall-SBOM_heimdall,examples/heimdall-usage-cyclonedx-example/main.cpp,18,Define each identifier in a dedicated statement.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,convention",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SGvQamoZJ6FAQuU3,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:examples/heimdall-usage-cyclonedx-example/utils.cpp,Heimdall-SBOM_heimdall,examples/heimdall-usage-cyclonedx-example/utils.cpp,3,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SGuIamoZJ6FAQuUy,cpp:S1659,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:examples/heimdall-usage-example/main.cpp,Heimdall-SBOM_heimdall,examples/heimdall-usage-example/main.cpp,15,Define each identifier in a dedicated statement.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,convention",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SGuIamoZJ6FAQuUz,cpp:S1659,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:examples/heimdall-usage-example/main.cpp,Heimdall-SBOM_heimdall,examples/heimdall-usage-example/main.cpp,18,Define each identifier in a dedicated statement.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,convention",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SGuiamoZJ6FAQuU0,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:examples/heimdall-usage-example/utils.cpp,Heimdall-SBOM_heimdall,examples/heimdall-usage-example/utils.cpp,3,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SGtlamoZJ6FAQuUw,cpp:S1659,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:examples/heimdall-usage-spdx-example/main.cpp,Heimdall-SBOM_heimdall,examples/heimdall-usage-spdx-example/main.cpp,15,Define each identifier in a dedicated statement.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,convention",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SGtlamoZJ6FAQuUx,cpp:S1659,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:examples/heimdall-usage-spdx-example/main.cpp,Heimdall-SBOM_heimdall,examples/heimdall-usage-spdx-example/main.cpp,18,Define each identifier in a dedicated statement.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,convention",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SGtTamoZJ6FAQuUv,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:examples/heimdall-usage-spdx-example/utils.cpp,Heimdall-SBOM_heimdall,examples/heimdall-usage-spdx-example/utils.cpp,3,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SGsZamoZJ6FAQuUr,c:S1874,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:examples/openssl_example/main.c,Heimdall-SBOM_heimdall,examples/openssl_example/main.c,18,'SHA256_Init' is deprecated,OPEN,15min,15min,tbakker@example.com,"cert,cwe,obsolete",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SGsZamoZJ6FAQuUs,c:S1874,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:examples/openssl_example/main.c,Heimdall-SBOM_heimdall,examples/openssl_example/main.c,19,'SHA256_Update' is deprecated,OPEN,15min,15min,tbakker@example.com,"cert,cwe,obsolete",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SGsZamoZJ6FAQuUt,c:S1874,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:examples/openssl_example/main.c,Heimdall-SBOM_heimdall,examples/openssl_example/main.c,20,'SHA256_Final' is deprecated,OPEN,15min,15min,tbakker@example.com,"cert,cwe,obsolete",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SGrqamoZJ6FAQuUp,cpp:S5945,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:examples/openssl_example/main.cpp,Heimdall-SBOM_heimdall,examples/openssl_example/main.cpp,9,"Use ""std::string"" instead of a C-style char array.",OPEN,10min,10min,tbakker@example.com,"bad-practice,clumsy,cppcoreguidelines",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SGrqamoZJ6FAQuUl,cpp:S1874,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:examples/openssl_example/main.cpp,Heimdall-SBOM_heimdall,examples/openssl_example/main.cpp,12,'SHA256_Init' is deprecated,OPEN,15min,15min,tbakker@example.com,"cert,cwe,obsolete",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SGrqamoZJ6FAQuUm,cpp:S1874,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:examples/openssl_example/main.cpp,Heimdall-SBOM_heimdall,examples/openssl_example/main.cpp,13,'SHA256_Update' is deprecated,OPEN,15min,15min,tbakker@example.com,"cert,cwe,obsolete",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SGrqamoZJ6FAQuUn,cpp:S1874,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:examples/openssl_example/main.cpp,Heimdall-SBOM_heimdall,examples/openssl_example/main.cpp,14,'SHA256_Final' is deprecated,OPEN,15min,15min,tbakker@example.com,"cert,cwe,obsolete",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SGrqamoZJ6FAQuUo,cpp:S5566,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:examples/openssl_example/main.cpp,Heimdall-SBOM_heimdall,examples/openssl_example/main.cpp,17,"Change this raw for-loop to a range for-loop or an ""std::ranges::for_each"".",OPEN,5min,5min,tbakker@example.com,"clumsy,cppcoreguidelines",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SGrqamoZJ6FAQuUq,cpp:S6495,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:examples/openssl_example/main.cpp,Heimdall-SBOM_heimdall,examples/openssl_example/main.cpp,18,"""std::print"" or ""std::format"" should be used instead of standard output manipulators",OPEN,5min,5min,tbakker@example.com,"clumsy,performance,since-c++20",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG_1amoZJ6FAQuWP,cpp:S5028,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/compat/compatibility.hpp,Heimdall-SBOM_heimdall,src/compat/compatibility.hpp,15,"Replace this macro by ""const"", ""constexpr"" or an ""enum"".",OPEN,10min,10min,cursoragent@cursor.com,"bad-practice,clumsy,cppcoreguidelines",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG_1amoZJ6FAQuWQ,cpp:S5028,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/compat/compatibility.hpp,Heimdall-SBOM_heimdall,src/compat/compatibility.hpp,16,"Replace this macro by ""const"", ""constexpr"" or an ""enum"".",OPEN,10min,10min,cursoragent@cursor.com,"bad-practice,clumsy,cppcoreguidelines",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG_1amoZJ6FAQuWR,cpp:S5028,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/compat/compatibility.hpp,Heimdall-SBOM_heimdall,src/compat/compatibility.hpp,17,"Replace this macro by ""const"", ""constexpr"" or an ""enum"".",OPEN,10min,10min,cursoragent@cursor.com,"bad-practice,clumsy,cppcoreguidelines",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG_1amoZJ6FAQuWS,cpp:S5028,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/compat/compatibility.hpp,Heimdall-SBOM_heimdall,src/compat/compatibility.hpp,18,"Replace this macro by ""const"", ""constexpr"" or an ""enum"".",OPEN,10min,10min,cursoragent@cursor.com,"bad-practice,clumsy,cppcoreguidelines",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG_1amoZJ6FAQuWT,cpp:S5028,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/compat/compatibility.hpp,Heimdall-SBOM_heimdall,src/compat/compatibility.hpp,19,"Replace this macro by ""const"", ""constexpr"" or an ""enum"".",OPEN,10min,10min,cursoragent@cursor.com,"bad-practice,clumsy,cppcoreguidelines",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG_1amoZJ6FAQuWU,cpp:S5812,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/compat/compatibility.hpp,Heimdall-SBOM_heimdall,src/compat/compatibility.hpp,96,Concatenate this namespace with the nested one.,OPEN,5min,5min,tbakker@example.com,"confusing,since-c++17",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG_1amoZJ6FAQuWV,cpp:S7035,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/compat/compatibility.hpp,Heimdall-SBOM_heimdall,src/compat/compatibility.hpp,157,"Prefer ""std::to_underlying"" to ""std::underlying_type_t"" to cast enums to their underlying type.",OPEN,15min,15min,cursoragent@cursor.com,"pitfall,since-c++23",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG_1amoZJ6FAQuWW,cpp:S1172,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/compat/compatibility.hpp,Heimdall-SBOM_heimdall,src/compat/compatibility.hpp,348,"Remove the unused parameter ""args"", make it unnamed, or declare it ""[[maybe_unused]]"".",OPEN,5min,5min,cursoragent@cursor.com,"based-on-misra,cert,unused",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG_1amoZJ6FAQuWX,cpp:S7035,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/compat/compatibility.hpp,Heimdall-SBOM_heimdall,src/compat/compatibility.hpp,366,"Prefer ""std::to_underlying"" to ""std::underlying_type_t"" to cast enums to their underlying type.",OPEN,15min,15min,cursoragent@cursor.com,"pitfall,since-c++23",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG9WamoZJ6FAQuVv,cpp:S5812,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/llvm/llvm_detector.cpp,Heimdall-SBOM_heimdall,src/llvm/llvm_detector.cpp,7,Concatenate this namespace with the nested one.,OPEN,5min,5min,cursoragent@cursor.com,"confusing,since-c++17",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG9WamoZJ6FAQuVw,cpp:S5945,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/llvm/llvm_detector.cpp,Heimdall-SBOM_heimdall,src/llvm/llvm_detector.cpp,25,"Use ""std::string"" instead of a C-style char array.",OPEN,10min,10min,cursoragent@cursor.com,"bad-practice,clumsy,cppcoreguidelines",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG9VamoZJ6FAQuVp,cpp:S6177,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/llvm/llvm_detector.cpp,Heimdall-SBOM_heimdall,src/llvm/llvm_detector.cpp,41,"Reduce verbosity with ""using enum"" for ""heimdall::llvm::LLVMVersion"".",OPEN,2min,2min,cursoragent@cursor.com,since-c++20,2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG9WamoZJ6FAQuVq,cpp:S6177,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/llvm/llvm_detector.cpp,Heimdall-SBOM_heimdall,src/llvm/llvm_detector.cpp,55,"Reduce verbosity with ""using enum"" for ""heimdall::llvm::LLVMVersion"".",OPEN,2min,2min,cursoragent@cursor.com,since-c++20,2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG9WamoZJ6FAQuVr,cpp:S6177,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/llvm/llvm_detector.cpp,Heimdall-SBOM_heimdall,src/llvm/llvm_detector.cpp,68,"Reduce verbosity with ""using enum"" for ""heimdall::llvm::LLVMVersion"".",OPEN,2min,2min,cursoragent@cursor.com,since-c++20,2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG9WamoZJ6FAQuVs,cpp:S6177,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/llvm/llvm_detector.cpp,Heimdall-SBOM_heimdall,src/llvm/llvm_detector.cpp,81,"Reduce verbosity with ""using enum"" for ""heimdall::llvm::LLVMVersion"".",OPEN,2min,2min,cursoragent@cursor.com,since-c++20,2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG9WamoZJ6FAQuVt,cpp:S6177,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/llvm/llvm_detector.cpp,Heimdall-SBOM_heimdall,src/llvm/llvm_detector.cpp,97,"Reduce verbosity with ""using enum"" for ""heimdall::llvm::LLVMVersion"".",OPEN,2min,2min,cursoragent@cursor.com,since-c++20,2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG9WamoZJ6FAQuVu,cpp:S6177,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/llvm/llvm_detector.cpp,Heimdall-SBOM_heimdall,src/llvm/llvm_detector.cpp,115,"Reduce verbosity with ""using enum"" for ""heimdall::llvm::LLVMVersion"".",OPEN,2min,2min,cursoragent@cursor.com,since-c++20,2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG9qamoZJ6FAQuVx,cpp:S5812,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/llvm/llvm_detector.hpp,Heimdall-SBOM_heimdall,src/llvm/llvm_detector.hpp,6,Concatenate this namespace with the nested one.,OPEN,5min,5min,cursoragent@cursor.com,"confusing,since-c++17",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG_KamoZJ6FAQuV9,cpp:S5421,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/llvm_symbols.cpp,Heimdall-SBOM_heimdall,src/tools/llvm_symbols.cpp,5,Global variables should be const.,OPEN,20min,20min,tbakker@example.com,"bad-practice,cppcoreguidelines,pitfall",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG_bamoZJ6FAQuV-,cpp:S5416,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/sbom_loader.cpp,Heimdall-SBOM_heimdall,src/tools/sbom_loader.cpp,10,"""using"" should be preferred to ""typedef"" for type aliasing.",OPEN,5min,5min,tbakker@example.com,"cppcoreguidelines,design,since-c++11",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG_bamoZJ6FAQuV_,cpp:S5416,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/sbom_loader.cpp,Heimdall-SBOM_heimdall,src/tools/sbom_loader.cpp,11,"""using"" should be preferred to ""typedef"" for type aliasing.",OPEN,5min,5min,tbakker@example.com,"cppcoreguidelines,design,since-c++11",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG_bamoZJ6FAQuWA,cpp:S5416,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/sbom_loader.cpp,Heimdall-SBOM_heimdall,src/tools/sbom_loader.cpp,12,"""using"" should be preferred to ""typedef"" for type aliasing.",OPEN,5min,5min,tbakker@example.com,"cppcoreguidelines,design,since-c++11",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG_bamoZJ6FAQuWB,cpp:S5416,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/sbom_loader.cpp,Heimdall-SBOM_heimdall,src/tools/sbom_loader.cpp,13,"""using"" should be preferred to ""typedef"" for type aliasing.",OPEN,5min,5min,tbakker@example.com,"cppcoreguidelines,design,since-c++11",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG_bamoZJ6FAQuWC,cpp:S5416,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/sbom_loader.cpp,Heimdall-SBOM_heimdall,src/tools/sbom_loader.cpp,14,"""using"" should be preferred to ""typedef"" for type aliasing.",OPEN,5min,5min,tbakker@example.com,"cppcoreguidelines,design,since-c++11",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG_bamoZJ6FAQuWD,cpp:S5416,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/sbom_loader.cpp,Heimdall-SBOM_heimdall,src/tools/sbom_loader.cpp,15,"""using"" should be preferred to ""typedef"" for type aliasing.",OPEN,5min,5min,tbakker@example.com,"cppcoreguidelines,design,since-c++11",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG_bamoZJ6FAQuWE,cpp:S5416,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/sbom_loader.cpp,Heimdall-SBOM_heimdall,src/tools/sbom_loader.cpp,16,"""using"" should be preferred to ""typedef"" for type aliasing.",OPEN,5min,5min,tbakker@example.com,"cppcoreguidelines,design,since-c++11",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG_bamoZJ6FAQuWF,cpp:S5827,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/sbom_loader.cpp,Heimdall-SBOM_heimdall,src/tools/sbom_loader.cpp,26,"Replace the redundant type with ""auto"".",OPEN,2min,2min,tbakker@example.com,"clumsy,cppcoreguidelines,since-c++11",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG_bamoZJ6FAQuWG,cpp:S5827,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/sbom_loader.cpp,Heimdall-SBOM_heimdall,src/tools/sbom_loader.cpp,27,"Replace the redundant type with ""auto"".",OPEN,2min,2min,tbakker@example.com,"clumsy,cppcoreguidelines,since-c++11",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG_bamoZJ6FAQuWH,cpp:S5827,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/sbom_loader.cpp,Heimdall-SBOM_heimdall,src/tools/sbom_loader.cpp,28,"Replace the redundant type with ""auto"".",OPEN,2min,2min,tbakker@example.com,"clumsy,cppcoreguidelines,since-c++11",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG_bamoZJ6FAQuWI,cpp:S5827,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/sbom_loader.cpp,Heimdall-SBOM_heimdall,src/tools/sbom_loader.cpp,29,"Replace the redundant type with ""auto"".",OPEN,2min,2min,tbakker@example.com,"clumsy,cppcoreguidelines,since-c++11",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG_bamoZJ6FAQuWJ,cpp:S5827,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/sbom_loader.cpp,Heimdall-SBOM_heimdall,src/tools/sbom_loader.cpp,30,"Replace the redundant type with ""auto"".",OPEN,2min,2min,tbakker@example.com,"clumsy,cppcoreguidelines,since-c++11",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG_bamoZJ6FAQuWK,cpp:S5827,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/sbom_loader.cpp,Heimdall-SBOM_heimdall,src/tools/sbom_loader.cpp,31,"Replace the redundant type with ""auto"".",OPEN,2min,2min,tbakker@example.com,"clumsy,cppcoreguidelines,since-c++11",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG_bamoZJ6FAQuWL,cpp:S5827,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/sbom_loader.cpp,Heimdall-SBOM_heimdall,src/tools/sbom_loader.cpp,32,"Replace the redundant type with ""auto"".",OPEN,2min,2min,tbakker@example.com,"clumsy,cppcoreguidelines,since-c++11",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG_bamoZJ6FAQuWM,cpp:S1066,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/sbom_loader.cpp,Heimdall-SBOM_heimdall,src/tools/sbom_loader.cpp,54,"Merge this ""if"" statement with the enclosing one.",OPEN,5min,5min,tbakker@example.com,clumsy,2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG_bamoZJ6FAQuWN,cpp:S1066,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/sbom_loader.cpp,Heimdall-SBOM_heimdall,src/tools/sbom_loader.cpp,63,"Merge this ""if"" statement with the enclosing one.",OPEN,5min,5min,tbakker@example.com,clumsy,2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG_bamoZJ6FAQuWO,cpp:S886,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/sbom_loader.cpp,Heimdall-SBOM_heimdall,src/tools/sbom_loader.cpp,101,Refactor this loop so that it is less error-prone.,OPEN,10min,10min,tbakker@example.com,based-on-misra,2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SGwkamoZJ6FAQuU5,cpp:S6164,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_cyclonedx_all_versions_cpp.cpp,Heimdall-SBOM_heimdall,tests/test_cyclonedx_all_versions_cpp.cpp,13,"Replace constant with ""std::numbers::pi"".",OPEN,5min,5min,tbakker@example.com,"clumsy,since-c++20",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SGwmamoZJ6FAQuU9,cpp:S125,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_cyclonedx_all_versions_cpp.cpp,Heimdall-SBOM_heimdall,tests/test_cyclonedx_all_versions_cpp.cpp,41,Remove the commented out code.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,unused",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SGwmamoZJ6FAQuU-,cpp:S125,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_cyclonedx_all_versions_cpp.cpp,Heimdall-SBOM_heimdall,tests/test_cyclonedx_all_versions_cpp.cpp,57,Remove the commented out code.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,unused",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SGwmamoZJ6FAQuU_,cpp:S125,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_cyclonedx_all_versions_cpp.cpp,Heimdall-SBOM_heimdall,tests/test_cyclonedx_all_versions_cpp.cpp,66,Remove the commented out code.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,unused",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SGwkamoZJ6FAQuU4,cpp:S1117,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_cyclonedx_all_versions_cpp.cpp,Heimdall-SBOM_heimdall,tests/test_cyclonedx_all_versions_cpp.cpp,72,declaration shadows a local variable,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,pitfall,suspicious",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SGwkamoZJ6FAQuU6,cpp:S3574,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_cyclonedx_all_versions_cpp.cpp,Heimdall-SBOM_heimdall,tests/test_cyclonedx_all_versions_cpp.cpp,72,Remove the redundant return type of this lambda.,OPEN,2min,2min,tbakker@example.com,"bad-practice,since-c++11",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SGwmamoZJ6FAQuVA,cpp:S125,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_cyclonedx_all_versions_cpp.cpp,Heimdall-SBOM_heimdall,tests/test_cyclonedx_all_versions_cpp.cpp,78,Remove the commented out code.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,unused",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SGwkamoZJ6FAQuU7,cpp:S6189,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_cyclonedx_all_versions_cpp.cpp,Heimdall-SBOM_heimdall,tests/test_cyclonedx_all_versions_cpp.cpp,185,"Replace ""auto"" with an explicit template parameter.",OPEN,2min,2min,tbakker@example.com,"clumsy,pitfall,since-c++20",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SGwmamoZJ6FAQuU8,cpp:S5425,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_cyclonedx_all_versions_cpp.cpp,Heimdall-SBOM_heimdall,tests/test_cyclonedx_all_versions_cpp.cpp,185,"""std::forward"" is never called on this forwarding reference argument.",OPEN,10min,10min,tbakker@example.com,"cppcoreguidelines,since-c++11,suspicious",2025-07-10T12:18:24+0000,2025-07-10T12:18:31+0000,
AZf0SG43amoZJ6FAQuVH,cpp:S3230,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,105,"Do not use the constructor's initializer list for data member ""pImpl"". Use the in-class initializer instead.",OPEN,10min,10min,tbakker@example.com,"cppcoreguidelines,performance",2025-07-09T12:51:57+0000,2025-07-10T11:59:39+0000,
AZf0SG3oamoZJ6FAQuVF,cpp:S3230,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/PluginInterface.cpp,Heimdall-SBOM_heimdall,src/common/PluginInterface.cpp,39,"Do not use the constructor's initializer list for data member ""sbomGenerator"". Use the in-class initializer instead.",OPEN,10min,10min,tbakker@example.com,"cppcoreguidelines,performance",2025-07-09T12:51:57+0000,2025-07-10T11:59:39+0000,
AZf0SG68amoZJ6FAQuVJ,cpp:S3230,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,206,"Do not use the constructor's initializer list for data member ""pImpl"". Use the in-class initializer instead.",OPEN,10min,10min,tbakker@example.com,"cppcoreguidelines,performance",2025-07-09T12:51:57+0000,2025-07-10T11:59:39+0000,
AZf0SG-aamoZJ6FAQuV7,cpp:S3230,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/gold/GoldAdapter.cpp,Heimdall-SBOM_heimdall,src/gold/GoldAdapter.cpp,30,"Do not use the constructor's initializer list for data member ""sbomGenerator"". Use the in-class initializer instead.",OPEN,10min,10min,tbakker@example.com,"cppcoreguidelines,performance",2025-07-09T12:51:57+0000,2025-07-10T11:59:39+0000,
AZf0SG-aamoZJ6FAQuV6,cpp:S3230,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/gold/GoldAdapter.cpp,Heimdall-SBOM_heimdall,src/gold/GoldAdapter.cpp,127,"Do not use the constructor's initializer list for data member ""pImpl"". Use the in-class initializer instead.",OPEN,10min,10min,tbakker@example.com,"cppcoreguidelines,performance",2025-07-09T12:51:57+0000,2025-07-10T11:59:39+0000,
AZf0SG-AamoZJ6FAQuV2,cpp:S1172,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/gold/GoldPlugin.cpp,Heimdall-SBOM_heimdall,src/gold/GoldPlugin.cpp,94,"Remove the unused parameter ""handle"", make it unnamed, or declare it ""[[maybe_unused]]"".",OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,unused",2025-07-09T12:51:57+0000,2025-07-10T11:59:39+0000,
AZf0SG-AamoZJ6FAQuV3,cpp:S995,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/gold/GoldPlugin.cpp,Heimdall-SBOM_heimdall,src/gold/GoldPlugin.cpp,94,"Make the type of this parameter a pointer-to-const. The current type of ""handle"" is ""void *"".",OPEN,2min,2min,tbakker@example.com,"bad-practice,misra-c++2008,misra-c2004,misra-c2012",2025-07-09T12:51:57+0000,2025-07-10T11:59:39+0000,
AZf0SG-AamoZJ6FAQuV4,cpp:S3776,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/gold/GoldPlugin.cpp,Heimdall-SBOM_heimdall,src/gold/GoldPlugin.cpp,150,Refactor this function to reduce its Cognitive Complexity from 28 to the 25 allowed.,OPEN,8min,8min,tbakker@example.com,"architecture,brain-overload",2025-07-09T12:51:57+0000,2025-07-10T11:59:39+0000,
AZf0SG-AamoZJ6FAQuV5,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/gold/GoldPlugin.cpp,Heimdall-SBOM_heimdall,src/gold/GoldPlugin.cpp,186,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-09T12:51:57+0000,2025-07-10T11:59:39+0000,
AZf0SG8famoZJ6FAQuVc,cpp:S3230,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/lld/LLDAdapter.cpp,Heimdall-SBOM_heimdall,src/lld/LLDAdapter.cpp,212,"Do not use the constructor's initializer list for data member ""pImpl"". Use the in-class initializer instead.",OPEN,10min,10min,tbakker@example.com,"cppcoreguidelines,performance",2025-07-09T12:51:57+0000,2025-07-10T11:59:39+0000,
AZf0SG89amoZJ6FAQuVn,cpp:S125,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/lld/LLDPlugin.cpp,Heimdall-SBOM_heimdall,src/lld/LLDPlugin.cpp,63,Remove the commented out code.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,unused",2025-07-09T12:51:57+0000,2025-07-10T11:59:39+0000,
AZf0SG-0amoZJ6FAQuV8,cpp:S6005,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/heimdall-validate.cpp,Heimdall-SBOM_heimdall,src/tools/heimdall-validate.cpp,226,Replace this declaration by a structured binding declaration.,OPEN,2min,2min,tbakker@example.com,"clumsy,cppcoreguidelines,since-c++17",2025-07-09T12:51:57+0000,2025-07-10T11:59:39+0000,
AZf0SG68amoZJ6FAQuVK,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,544,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-09T04:49:07+0000,2025-07-10T11:59:39+0000,
AZf0SG68amoZJ6FAQuVL,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,545,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-09T04:49:07+0000,2025-07-10T11:59:39+0000,
AZf0SG68amoZJ6FAQuVM,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,633,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-09T04:49:07+0000,2025-07-10T11:59:39+0000,
AZf0SG68amoZJ6FAQuVN,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,638,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-09T04:49:07+0000,2025-07-10T11:59:39+0000,
AZf0SG68amoZJ6FAQuVQ,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,761,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-09T04:49:07+0000,2025-07-10T11:59:39+0000,
AZf0SG68amoZJ6FAQuVR,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,765,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-09T04:49:07+0000,2025-07-10T11:59:39+0000,
AZf0SG68amoZJ6FAQuVS,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,769,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-09T04:49:07+0000,2025-07-10T11:59:39+0000,
AZf0SG68amoZJ6FAQuVT,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,781,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-09T04:49:07+0000,2025-07-10T11:59:39+0000,
AZf0SG68amoZJ6FAQuVU,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,798,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-09T04:49:07+0000,2025-07-10T11:59:39+0000,
AZf0SG68amoZJ6FAQuVV,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,810,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-09T04:49:07+0000,2025-07-10T11:59:39+0000,
AZf0SG68amoZJ6FAQuVW,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,812,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-09T04:49:07+0000,2025-07-10T11:59:39+0000,
AZf0SG68amoZJ6FAQuVX,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,814,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-09T04:49:07+0000,2025-07-10T11:59:39+0000,
AZf0SG68amoZJ6FAQuVY,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,815,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-09T04:49:07+0000,2025-07-10T11:59:39+0000,
AZf0SG68amoZJ6FAQuVZ,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,820,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-09T04:49:07+0000,2025-07-10T11:59:39+0000,
AZf0SG68amoZJ6FAQuVa,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,821,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-09T04:49:07+0000,2025-07-10T11:59:39+0000,
AZf0SG68amoZJ6FAQuVb,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,826,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-09T04:49:07+0000,2025-07-10T11:59:39+0000,
AZf0SG5famoZJ6FAQuVI,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMValidator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMValidator.cpp,324,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-09T04:49:07+0000,2025-07-10T11:59:39+0000,
AZf0SG-AamoZJ6FAQuV1,cpp:S5421,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/gold/GoldPlugin.cpp,Heimdall-SBOM_heimdall,src/gold/GoldPlugin.cpp,36,Global variables should be const.,OPEN,20min,20min,tbakker@example.com,"bad-practice,cppcoreguidelines,pitfall",2025-07-09T04:49:07+0000,2025-07-10T11:59:39+0000,
AZfsoJoOZX9hALJ38m7R,cpp:S3776,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/heimdall-validate.cpp,Heimdall-SBOM_heimdall,src/tools/heimdall-validate.cpp,86,Refactor this function to reduce its Cognitive Complexity from 36 to the 25 allowed.,OPEN,16min,16min,cursoragent@cursor.com,"architecture,brain-overload",2025-07-08T18:16:33+0000,2025-07-09T00:38:55+0000,
AZfsoJoOZX9hALJ38m7S,cpp:S1121,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/heimdall-validate.cpp,Heimdall-SBOM_heimdall,src/tools/heimdall-validate.cpp,101,Extract the assignment from this expression.,OPEN,5min,5min,cursoragent@cursor.com,"based-on-misra,cert,cwe,suspicious",2025-07-08T18:16:33+0000,2025-07-09T00:38:55+0000,
AZfrGXe5A5Oyzdf1xAh7,cpp:S1117,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,415,declaration shadows a field of 'heimdall::SBOMGenerator::Impl',OPEN,5min,5min,cursoragent@cursor.com,"based-on-misra,cert,pitfall,suspicious",2025-07-08T01:21:11+0000,2025-07-08T17:29:56+0000,
AZfrGXe5A5Oyzdf1xAiB,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,524,Convert this string literal to a raw string literal.,OPEN,2min,2min,cursoragent@cursor.com,since-c++11,2025-07-08T01:21:11+0000,2025-07-08T17:29:56+0000,
AZfrGXe5A5Oyzdf1xAiJ,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,627,Convert this string literal to a raw string literal.,OPEN,2min,2min,cursoragent@cursor.com,since-c++11,2025-07-08T01:21:11+0000,2025-07-08T17:29:56+0000,
AZfrGXe5A5Oyzdf1xAid,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,636,Convert this string literal to a raw string literal.,OPEN,2min,2min,cursoragent@cursor.com,since-c++11,2025-07-08T01:21:11+0000,2025-07-08T17:29:56+0000,
AZfrGXdbA5Oyzdf1xAhr,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,578,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,cursoragent@cursor.com,since-c++17,2025-07-08T00:50:05+0000,2025-07-08T17:29:56+0000,
AZfrGXdbA5Oyzdf1xAhs,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1247,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,cursoragent@cursor.com,since-c++17,2025-07-08T00:50:05+0000,2025-07-08T17:29:56+0000,
AZfrGXdbA5Oyzdf1xAht,cpp:S1172,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1247,"Remove the unused parameter ""version"", make it unnamed, or declare it ""[[maybe_unused]]"".",OPEN,5min,5min,cursoragent@cursor.com,"based-on-misra,cert,unused",2025-07-08T00:50:05+0000,2025-07-08T17:29:56+0000,
AZfrGXdbA5Oyzdf1xAhu,cpp:S995,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1247,"Make the type of this parameter a reference-to-const. The current type of ""version"" is ""class std::basic_string<char> &"".",OPEN,2min,2min,cursoragent@cursor.com,"bad-practice,misra-c++2008,misra-c2004,misra-c2012",2025-07-08T00:50:05+0000,2025-07-08T17:29:56+0000,
AZfrGXdbA5Oyzdf1xAhv,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1350,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,cursoragent@cursor.com,since-c++17,2025-07-08T00:50:05+0000,2025-07-08T17:29:56+0000,
AZfrGXdbA5Oyzdf1xAhw,cpp:S1172,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1350,"Remove the unused parameter ""symbols"", make it unnamed, or declare it ""[[maybe_unused]]"".",OPEN,5min,5min,cursoragent@cursor.com,"based-on-misra,cert,unused",2025-07-08T00:50:05+0000,2025-07-08T17:29:56+0000,
AZfrGXdbA5Oyzdf1xAhx,cpp:S995,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1350,"Make the type of this parameter a reference-to-const. The current type of ""symbols"" is ""class std::vector<struct heimdall::SymbolInfo> &"".",OPEN,2min,2min,cursoragent@cursor.com,"bad-practice,misra-c++2008,misra-c2004,misra-c2012",2025-07-08T00:50:05+0000,2025-07-08T17:29:56+0000,
AZfrGXdbA5Oyzdf1xAh0,cpp:S995,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1356,"Make the type of this parameter a reference-to-const. The current type of ""sections"" is ""class std::vector<struct heimdall::SectionInfo> &"".",OPEN,2min,2min,cursoragent@cursor.com,"bad-practice,misra-c++2008,misra-c2004,misra-c2012",2025-07-08T00:50:05+0000,2025-07-08T17:29:56+0000,
AZfrGXdbA5Oyzdf1xAhy,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1356,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,cursoragent@cursor.com,since-c++17,2025-07-08T00:50:05+0000,2025-07-08T17:29:56+0000,
AZfrGXdbA5Oyzdf1xAhz,cpp:S1172,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1356,"Remove the unused parameter ""sections"", make it unnamed, or declare it ""[[maybe_unused]]"".",OPEN,5min,5min,cursoragent@cursor.com,"based-on-misra,cert,unused",2025-07-08T00:50:05+0000,2025-07-08T17:29:56+0000,
AZfrGXdbA5Oyzdf1xAh1,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1362,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,cursoragent@cursor.com,since-c++17,2025-07-08T00:50:05+0000,2025-07-08T17:29:56+0000,
AZfrGXdbA5Oyzdf1xAh2,cpp:S1172,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1362,"Remove the unused parameter ""version"", make it unnamed, or declare it ""[[maybe_unused]]"".",OPEN,5min,5min,cursoragent@cursor.com,"based-on-misra,cert,unused",2025-07-08T00:50:05+0000,2025-07-08T17:29:56+0000,
AZfrGXdbA5Oyzdf1xAh3,cpp:S995,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1362,"Make the type of this parameter a reference-to-const. The current type of ""version"" is ""class std::basic_string<char> &"".",OPEN,2min,2min,cursoragent@cursor.com,"bad-practice,misra-c++2008,misra-c2004,misra-c2012",2025-07-08T00:50:05+0000,2025-07-08T17:29:56+0000,
AZfrGXdbA5Oyzdf1xAh4,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1368,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,cursoragent@cursor.com,since-c++17,2025-07-08T00:50:05+0000,2025-07-08T17:29:56+0000,
AZfrGXdbA5Oyzdf1xAh5,cpp:S1172,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1368,"Remove the unused parameter ""company"", make it unnamed, or declare it ""[[maybe_unused]]"".",OPEN,5min,5min,cursoragent@cursor.com,"based-on-misra,cert,unused",2025-07-08T00:50:05+0000,2025-07-08T17:29:56+0000,
AZfrGXdbA5Oyzdf1xAh6,cpp:S995,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1368,"Make the type of this parameter a reference-to-const. The current type of ""company"" is ""class std::basic_string<char> &"".",OPEN,2min,2min,cursoragent@cursor.com,"bad-practice,misra-c++2008,misra-c2004,misra-c2012",2025-07-08T00:50:05+0000,2025-07-08T17:29:56+0000,
AZfiJ2vaUR2juKVPuW6v,python:S1192,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:scripts/sonarqube_issues_to_csv.py,Heimdall-SBOM_heimdall,scripts/sonarqube_issues_to_csv.py,198,Define a constant instead of duplicating this literal '.xlsx' 4 times.,OPEN,8min,8min,tbakker@example.com,design,2025-07-06T23:50:48+0000,2025-07-06T23:50:48+0000,
AZfiJ2sHUR2juKVPuW6f,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,57,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T23:50:48+0000,2025-07-06T23:50:48+0000,
AZfiJ2sHUR2juKVPuW6g,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,58,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T23:50:48+0000,2025-07-06T23:50:48+0000,
AZfiJ2sHUR2juKVPuW6h,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,63,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T23:50:48+0000,2025-07-06T23:50:48+0000,
AZfiJ2sHUR2juKVPuW6i,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,68,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T23:50:48+0000,2025-07-06T23:50:48+0000,
AZfiJ2sHUR2juKVPuW6j,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,73,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T23:50:48+0000,2025-07-06T23:50:48+0000,
AZfiJ2sHUR2juKVPuW6k,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,78,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T23:50:48+0000,2025-07-06T23:50:48+0000,
AZfiJ2sHUR2juKVPuW6l,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,105,"Use the init-statement to declare ""shouldBreak"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-06T23:50:48+0000,2025-07-06T23:50:48+0000,
AZfiJ2sHUR2juKVPuW6m,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,105,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-06T23:50:48+0000,2025-07-06T23:50:48+0000,
AZfiJ2sHUR2juKVPuW6o,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,156,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T23:50:48+0000,2025-07-06T23:50:48+0000,
AZfiJ2sHUR2juKVPuW6p,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,177,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T23:50:48+0000,2025-07-06T23:50:48+0000,
AZfiJ2rqUR2juKVPuW6Y,cpp:S6045,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMValidator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMValidator.cpp,73,"Use the transparent comparator ""std::less<>"" with this associative string container.",OPEN,2min,2min,tbakker@example.com,"performance,since-c++14",2025-07-06T23:50:48+0000,2025-07-06T23:50:48+0000,
AZfiJ2rqUR2juKVPuW6a,cpp:S6045,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMValidator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMValidator.cpp,84,"Use the transparent comparator ""std::less<>"" with this associative string container.",OPEN,2min,2min,tbakker@example.com,"performance,since-c++14",2025-07-06T23:50:48+0000,2025-07-06T23:50:48+0000,
AZfiJ2rqUR2juKVPuW6b,cpp:S6045,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMValidator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMValidator.cpp,118,"Use the transparent comparator ""std::less<>"" with this associative string container.",OPEN,2min,2min,tbakker@example.com,"performance,since-c++14",2025-07-06T23:50:48+0000,2025-07-06T23:50:48+0000,
AZfiJ2rqUR2juKVPuW6d,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMValidator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMValidator.cpp,210,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T23:50:48+0000,2025-07-06T23:50:48+0000,
AZfiJ2rqUR2juKVPuW6e,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMValidator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMValidator.cpp,232,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T23:50:48+0000,2025-07-06T23:50:48+0000,
AZfiJ2s2UR2juKVPuW6r,cpp:S6045,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMValidator.hpp,Heimdall-SBOM_heimdall,src/common/SBOMValidator.hpp,83,"Use the transparent comparator ""std::less<>"" with this associative string container.",OPEN,2min,2min,tbakker@example.com,"performance,since-c++14",2025-07-06T23:50:48+0000,2025-07-06T23:50:48+0000,
AZfiJ2s2UR2juKVPuW6s,cpp:S6045,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMValidator.hpp,Heimdall-SBOM_heimdall,src/common/SBOMValidator.hpp,84,"Use the transparent comparator ""std::less<>"" with this associative string container.",OPEN,2min,2min,tbakker@example.com,"performance,since-c++14",2025-07-06T23:50:48+0000,2025-07-06T23:50:48+0000,
AZfiJ2uSUR2juKVPuW6u,cpp:S5421,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/gold/GoldPlugin.cpp,Heimdall-SBOM_heimdall,src/gold/GoldPlugin.cpp,32,Global variables should be const.,OPEN,20min,20min,tbakker@example.com,"bad-practice,cppcoreguidelines,pitfall",2025-07-06T23:50:48+0000,2025-07-06T23:50:48+0000,
AZfh0jFY_yZdEi8IfXnu,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,48,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXnv,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,50,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXnw,cpp:S5817,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,57,"This function should be declared ""const"".",OPEN,5min,5min,tbakker@example.com,"confusing,pitfall",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXnz,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,91,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXn0,cpp:S924,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,100,"Reduce the number of nested ""break"" statements from 2 to 1 authorized.",OPEN,20min,20min,tbakker@example.com,"based-on-misra,confusing",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXnx,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,102,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXn6,cpp:S5817,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,121,"This function should be declared ""const"".",OPEN,5min,5min,tbakker@example.com,"confusing,pitfall",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXn7,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,121,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXn8,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,125,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXoA,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,205,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXoB,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,209,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXoJ,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,235,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXoK,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,237,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXoL,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,244,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXoM,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,246,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXoN,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,307,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXoP,cpp:S6045,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,317,"Use the transparent comparator ""std::less<>"" with this associative string container.",OPEN,2min,2min,tbakker@example.com,"performance,since-c++14",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXoQ,cpp:S6045,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,318,"Use the transparent comparator ""std::less<>"" with this associative string container.",OPEN,2min,2min,tbakker@example.com,"performance,since-c++14",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXnr,cpp:S6177,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,325,"Reduce verbosity with ""using enum"" for ""heimdall::SBOMDifference::Type"".",OPEN,2min,2min,tbakker@example.com,since-c++20,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXoR,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,346,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXoT,cpp:S1659,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,359,Define each identifier in a dedicated statement.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,convention",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXoU,cpp:S6045,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,359,"Use the transparent comparator ""std::less<>"" with this associative string container.",OPEN,2min,2min,tbakker@example.com,"performance,since-c++14",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXoV,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,371,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXoW,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,381,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXoX,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,413,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXoY,cpp:S6045,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,415,"Use the transparent comparator ""std::less<>"" with this associative string container.",OPEN,2min,2min,tbakker@example.com,"performance,since-c++14",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXoZ,cpp:S6005,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,429,Replace this declaration by a structured binding declaration.,OPEN,2min,2min,tbakker@example.com,"clumsy,cppcoreguidelines,since-c++17",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXoa,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,444,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXob,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,475,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXoc,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,482,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXod,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,483,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXoe,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,507,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXof,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,509,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXog,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,521,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXoh,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,523,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXoi,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,548,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXoj,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,550,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXok,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,551,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXol,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,552,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXom,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,553,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXon,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,558,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXoo,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,559,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXop,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,560,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXoq,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,561,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXns,cpp:S6177,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,616,"Reduce verbosity with ""using enum"" for ""heimdall::SBOMDifference::Type"".",OPEN,2min,2min,tbakker@example.com,since-c++20,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFY_yZdEi8IfXnt,cpp:S6177,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.cpp,639,"Reduce verbosity with ""using enum"" for ""heimdall::SBOMDifference::Type"".",OPEN,2min,2min,tbakker@example.com,since-c++20,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jGK_yZdEi8IfXo1,cpp:S5018,BLOCKER,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.hpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.hpp,16,"Give class ""SBOMComponent"" a noexcept move constructor.",OPEN,2min,2min,tbakker@example.com,"cppcoreguidelines,error-handling,since-c++11",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jGK_yZdEi8IfXoy,cpp:S6045,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.hpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.hpp,23,"Use the transparent comparator ""std::less<>"" with this associative string container.",OPEN,2min,2min,tbakker@example.com,"performance,since-c++14",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jGK_yZdEi8IfXo0,cpp:S6186,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.hpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.hpp,30,"Keep operator== and remove operator!= for operand types ""SBOMComponent"" and ""SBOMComponent"".",OPEN,5min,5min,tbakker@example.com,"clumsy,pitfall,since-c++20",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jGK_yZdEi8IfXo2,cpp:S5018,BLOCKER,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.hpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.hpp,37,"Give class ""SBOMDifference"" a noexcept move constructor.",OPEN,2min,2min,tbakker@example.com,"cppcoreguidelines,error-handling,since-c++11",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jGK_yZdEi8IfXoz,cpp:S6045,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMComparator.hpp,Heimdall-SBOM_heimdall,src/common/SBOMComparator.hpp,163,"Use the transparent comparator ""std::less<>"" with this associative string container.",OPEN,2min,2min,tbakker@example.com,"performance,since-c++14",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFK_yZdEi8IfXnR,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMValidator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMValidator.cpp,44,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFK_yZdEi8IfXnS,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMValidator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMValidator.cpp,47,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFK_yZdEi8IfXnW,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMValidator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMValidator.cpp,143,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFK_yZdEi8IfXnX,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMValidator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMValidator.cpp,146,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFK_yZdEi8IfXnY,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMValidator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMValidator.cpp,149,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFK_yZdEi8IfXnZ,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMValidator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMValidator.cpp,152,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFK_yZdEi8IfXna,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMValidator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMValidator.cpp,155,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFK_yZdEi8IfXnb,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMValidator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMValidator.cpp,158,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFK_yZdEi8IfXni,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMValidator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMValidator.cpp,279,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFK_yZdEi8IfXnj,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMValidator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMValidator.cpp,282,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFK_yZdEi8IfXnk,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMValidator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMValidator.cpp,285,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFK_yZdEi8IfXnl,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMValidator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMValidator.cpp,288,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFK_yZdEi8IfXnm,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMValidator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMValidator.cpp,291,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jFK_yZdEi8IfXno,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMValidator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMValidator.cpp,313,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jF6_yZdEi8IfXov,cpp:S6045,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMValidator.hpp,Heimdall-SBOM_heimdall,src/common/SBOMValidator.hpp,17,"Use the transparent comparator ""std::less<>"" with this associative string container.",OPEN,2min,2min,tbakker@example.com,"performance,since-c++14",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jHE_yZdEi8IfXo3,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/heimdall-validate.cpp,Heimdall-SBOM_heimdall,src/tools/heimdall-validate.cpp,61,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jHE_yZdEi8IfXo4,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/heimdall-validate.cpp,Heimdall-SBOM_heimdall,src/tools/heimdall-validate.cpp,63,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jHE_yZdEi8IfXo5,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/heimdall-validate.cpp,Heimdall-SBOM_heimdall,src/tools/heimdall-validate.cpp,71,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jHE_yZdEi8IfXo6,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/heimdall-validate.cpp,Heimdall-SBOM_heimdall,src/tools/heimdall-validate.cpp,73,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jHE_yZdEi8IfXo7,cpp:S886,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/heimdall-validate.cpp,Heimdall-SBOM_heimdall,src/tools/heimdall-validate.cpp,97,Refactor this loop so that it is less error-prone.,OPEN,10min,10min,tbakker@example.com,based-on-misra,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jHE_yZdEi8IfXo8,cpp:S1121,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/heimdall-validate.cpp,Heimdall-SBOM_heimdall,src/tools/heimdall-validate.cpp,99,Extract the assignment from this expression.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,cwe,suspicious",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jHE_yZdEi8IfXo9,cpp:S6177,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/heimdall-validate.cpp,Heimdall-SBOM_heimdall,src/tools/heimdall-validate.cpp,189,"Reduce verbosity with ""using enum"" for ""heimdall::SBOMDifference::Type"".",OPEN,2min,2min,tbakker@example.com,since-c++20,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jHE_yZdEi8IfXo_,cpp:S886,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/heimdall-validate.cpp,Heimdall-SBOM_heimdall,src/tools/heimdall-validate.cpp,247,Refactor this loop so that it is less error-prone.,OPEN,10min,10min,tbakker@example.com,based-on-misra,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jHE_yZdEi8IfXpA,cpp:S1121,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/heimdall-validate.cpp,Heimdall-SBOM_heimdall,src/tools/heimdall-validate.cpp,249,Extract the assignment from this expression.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,cwe,suspicious",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jHE_yZdEi8IfXpB,cpp:S886,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/heimdall-validate.cpp,Heimdall-SBOM_heimdall,src/tools/heimdall-validate.cpp,305,Refactor this loop so that it is less error-prone.,OPEN,10min,10min,tbakker@example.com,based-on-misra,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jHE_yZdEi8IfXpC,cpp:S1121,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/heimdall-validate.cpp,Heimdall-SBOM_heimdall,src/tools/heimdall-validate.cpp,307,Extract the assignment from this expression.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,cwe,suspicious",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jHE_yZdEi8IfXpD,cpp:S1121,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/heimdall-validate.cpp,Heimdall-SBOM_heimdall,src/tools/heimdall-validate.cpp,309,Extract the assignment from this expression.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,cwe,suspicious",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jHE_yZdEi8IfXpE,cpp:S886,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/heimdall-validate.cpp,Heimdall-SBOM_heimdall,src/tools/heimdall-validate.cpp,356,Refactor this loop so that it is less error-prone.,OPEN,10min,10min,tbakker@example.com,based-on-misra,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jHE_yZdEi8IfXpF,cpp:S1121,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/heimdall-validate.cpp,Heimdall-SBOM_heimdall,src/tools/heimdall-validate.cpp,358,Extract the assignment from this expression.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,cwe,suspicious",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jHE_yZdEi8IfXpG,cpp:S1121,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/heimdall-validate.cpp,Heimdall-SBOM_heimdall,src/tools/heimdall-validate.cpp,360,Extract the assignment from this expression.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,cwe,suspicious",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0jHE_yZdEi8IfXpH,cpp:S1121,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/tools/heimdall-validate.cpp,Heimdall-SBOM_heimdall,src/tools/heimdall-validate.cpp,362,Extract the assignment from this expression.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,cwe,suspicious",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0i-b_yZdEi8IfXnQ,cpp:S3656,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_sbom_validation.cpp,Heimdall-SBOM_heimdall,tests/test_sbom_validation.cpp,8,"Member variables should not be ""protected"".",OPEN,20min,20min,tbakker@example.com,"based-on-misra,cppcoreguidelines,pitfall",2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfh0i-b_yZdEi8IfXnP,cpp:S1481,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_sbom_validation.cpp,Heimdall-SBOM_heimdall,tests/test_sbom_validation.cpp,171,unused variable 'comparator',OPEN,5min,5min,tbakker@example.com,unused,2025-07-06T22:17:41+0000,2025-07-06T22:17:49+0000,
AZfhtSmp0DsrBC_W8U-a,python:S3457,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:scripts/sonarqube_issues_to_csv.py,Heimdall-SBOM_heimdall,scripts/sonarqube_issues_to_csv.py,319,Add replacement fields or use a normal string instead of an f-string.,OPEN,1min,1min,tbakker@example.com,confusing,2025-07-06T21:45:34+0000,2025-07-06T21:46:54+0000,
AZfhtSmp0DsrBC_W8U-b,python:S3457,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:scripts/sonarqube_issues_to_csv.py,Heimdall-SBOM_heimdall,scripts/sonarqube_issues_to_csv.py,323,Add replacement fields or use a normal string instead of an f-string.,OPEN,1min,1min,tbakker@example.com,confusing,2025-07-06T21:45:34+0000,2025-07-06T21:46:54+0000,
AZfhrTMY_yZdEi8Iese2,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,308,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T21:36:51+0000,2025-07-06T21:36:51+0000,
AZfhrTMY_yZdEi8Iese1,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,316,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T21:36:51+0000,2025-07-06T21:36:51+0000,
AZfhrTMY_yZdEi8Iese8,cpp:S6005,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,498,Replace this declaration by a structured binding declaration.,OPEN,2min,2min,tbakker@example.com,"clumsy,cppcoreguidelines,since-c++17",2025-07-06T21:36:51+0000,2025-07-06T21:36:51+0000,
AZfhrTMY_yZdEi8Iese7,cpp:S6005,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,529,Replace this declaration by a structured binding declaration.,OPEN,2min,2min,tbakker@example.com,"clumsy,cppcoreguidelines,since-c++17",2025-07-06T21:36:51+0000,2025-07-06T21:36:51+0000,
AZfhrTMY_yZdEi8Iese3,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,567,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-06T21:36:51+0000,2025-07-06T21:36:51+0000,
AZfhrTMY_yZdEi8Iese6,cpp:S6005,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,729,Replace this declaration by a structured binding declaration.,OPEN,2min,2min,tbakker@example.com,"clumsy,cppcoreguidelines,since-c++17",2025-07-06T21:36:51+0000,2025-07-06T21:36:51+0000,
AZfhrTGx_yZdEi8Iesey,cpp:S5416,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,44,"""using"" should be preferred to ""typedef"" for type aliasing.",OPEN,5min,5min,tbakker@example.com,"cppcoreguidelines,design,since-c++11",2025-07-06T21:36:51+0000,2025-07-06T21:36:51+0000,
AZfhrTGx_yZdEi8Iesez,cpp:S5827,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,272,"Replace the redundant type with ""auto"".",OPEN,2min,2min,tbakker@example.com,"clumsy,cppcoreguidelines,since-c++11",2025-07-06T21:36:51+0000,2025-07-06T21:36:51+0000,
AZfhrTGx_yZdEi8Iese0,cpp:S1066,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,301,"Merge this ""if"" statement with the enclosing one.",OPEN,5min,5min,tbakker@example.com,clumsy,2025-07-06T21:36:51+0000,2025-07-06T21:36:51+0000,
AZfhkua10DsrBC_W7hIs,cpp:S5817,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/DWARFExtractor.cpp,Heimdall-SBOM_heimdall,src/common/DWARFExtractor.cpp,641,"This function should be declared ""const"".",OPEN,5min,5min,tbakker@example.com,"confusing,pitfall",2025-07-06T21:07:55+0000,2025-07-06T21:07:55+0000,
AZfhkua10DsrBC_W7hIt,cpp:S995,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/DWARFExtractor.cpp,Heimdall-SBOM_heimdall,src/common/DWARFExtractor.cpp,642,"Make the type of this parameter a reference-to-const. The current type of ""functions"" is ""class std::vector<class std::basic_string<char> > &"".",OPEN,2min,2min,tbakker@example.com,"bad-practice,misra-c++2008,misra-c2004,misra-c2012",2025-07-06T21:07:55+0000,2025-07-06T21:07:55+0000,
AZfhkAy8_yZdEi8IeE5K,python:S3776,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:scripts/validate_sboms_online.py,Heimdall-SBOM_heimdall,scripts/validate_sboms_online.py,15,Refactor this function to reduce its Cognitive Complexity from 27 to the 15 allowed.,OPEN,17min,17min,tbakker@example.com,"architecture,brain-overload",2025-07-06T21:06:15+0000,2025-07-06T21:06:22+0000,
AZfhkAy8_yZdEi8IeE5L,python:S3457,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:scripts/validate_sboms_online.py,Heimdall-SBOM_heimdall,scripts/validate_sboms_online.py,112,Add replacement fields or use a normal string instead of an f-string.,OPEN,1min,1min,tbakker@example.com,confusing,2025-07-06T21:06:15+0000,2025-07-06T21:06:22+0000,
AZfhkAy8_yZdEi8IeE5M,python:S3457,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:scripts/validate_sboms_online.py,Heimdall-SBOM_heimdall,scripts/validate_sboms_online.py,127,Add replacement fields or use a normal string instead of an f-string.,OPEN,1min,1min,tbakker@example.com,confusing,2025-07-06T21:06:15+0000,2025-07-06T21:06:22+0000,
AZfhkAy8_yZdEi8IeE5N,python:S3457,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:scripts/validate_sboms_online.py,Heimdall-SBOM_heimdall,scripts/validate_sboms_online.py,167,Add replacement fields or use a normal string instead of an f-string.,OPEN,1min,1min,tbakker@example.com,confusing,2025-07-06T21:06:15+0000,2025-07-06T21:06:22+0000,
AZfhkAy8_yZdEi8IeE5O,python:S3457,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:scripts/validate_sboms_online.py,Heimdall-SBOM_heimdall,scripts/validate_sboms_online.py,169,Add replacement fields or use a normal string instead of an f-string.,OPEN,1min,1min,tbakker@example.com,confusing,2025-07-06T21:06:15+0000,2025-07-06T21:06:22+0000,
AZfhkAy8_yZdEi8IeE5P,python:S3457,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:scripts/validate_sboms_online.py,Heimdall-SBOM_heimdall,scripts/validate_sboms_online.py,183,Add replacement fields or use a normal string instead of an f-string.,OPEN,1min,1min,tbakker@example.com,confusing,2025-07-06T21:06:15+0000,2025-07-06T21:06:22+0000,
AZfhkAy8_yZdEi8IeE5Q,python:S3457,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:scripts/validate_sboms_online.py,Heimdall-SBOM_heimdall,scripts/validate_sboms_online.py,185,Add replacement fields or use a normal string instead of an f-string.,OPEN,1min,1min,tbakker@example.com,confusing,2025-07-06T21:06:15+0000,2025-07-06T21:06:22+0000,
AZfhkAy8_yZdEi8IeE5R,python:S3776,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:scripts/validate_sboms_online.py,Heimdall-SBOM_heimdall,scripts/validate_sboms_online.py,194,Refactor this function to reduce its Cognitive Complexity from 17 to the 15 allowed.,OPEN,7min,7min,tbakker@example.com,"architecture,brain-overload",2025-07-06T21:06:15+0000,2025-07-06T21:06:22+0000,
AZfheZP3PrcFnnHeXuq5,cpp:S3230,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/lld/LLDAdapter.cpp,Heimdall-SBOM_heimdall,src/lld/LLDAdapter.cpp,66,"Do not use the constructor's initializer list for data member ""sbomGenerator"". Use the in-class initializer instead.",OPEN,10min,10min,tbakker@example.com,"cppcoreguidelines,performance",2025-07-06T20:41:46+0000,2025-07-06T20:41:46+0000,
AZfheZP3PrcFnnHeXuq6,cpp:S6197,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/lld/LLDAdapter.cpp,Heimdall-SBOM_heimdall,src/lld/LLDAdapter.cpp,130,"Replace with the version of ""std::ranges::find"" that takes a range.",OPEN,2min,2min,tbakker@example.com,"bad-practice,clumsy,since-c++20",2025-07-06T20:41:46+0000,2025-07-06T20:41:46+0000,
AZfhboKpXXsaA10sd_U8,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1677,"Use the init-statement to declare ""functions"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-06T20:28:16+0000,2025-07-06T20:28:16+0000,
AZfhboMkXXsaA10sd_VC,cpp:S6005,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,486,Replace this declaration by a structured binding declaration.,OPEN,2min,2min,tbakker@example.com,"clumsy,cppcoreguidelines,since-c++17",2025-07-06T20:28:16+0000,2025-07-06T20:28:16+0000,
AZfhboMkXXsaA10sd_VB,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,505,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-06T20:28:16+0000,2025-07-06T20:28:16+0000,
AZfhZ6pH_yZdEi8IdFAC,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,372,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T20:21:49+0000,2025-07-06T20:21:49+0000,
AZfhZ6pH_yZdEi8IdFAD,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,373,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T20:21:49+0000,2025-07-06T20:21:49+0000,
AZfhZ6pH_yZdEi8IdFAE,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,374,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T20:21:49+0000,2025-07-06T20:21:49+0000,
AZfhZ6pH_yZdEi8IdFAF,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,375,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T20:21:49+0000,2025-07-06T20:21:49+0000,
AZfhZ6pH_yZdEi8IdFAG,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,424,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T20:21:49+0000,2025-07-06T20:21:49+0000,
AZfhZ6pH_yZdEi8IdFAH,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,425,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T20:21:49+0000,2025-07-06T20:21:49+0000,
AZfhZ6pH_yZdEi8IdFAI,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,426,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T20:21:49+0000,2025-07-06T20:21:49+0000,
AZfhZ6pH_yZdEi8IdFAJ,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,427,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T20:21:49+0000,2025-07-06T20:21:49+0000,
AZfhZ6pH_yZdEi8IdFAK,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,458,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T20:21:49+0000,2025-07-06T20:21:49+0000,
AZfhZ6pH_yZdEi8IdFAL,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,459,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T20:21:49+0000,2025-07-06T20:21:49+0000,
AZfhZ6pH_yZdEi8IdFAM,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,460,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T20:21:49+0000,2025-07-06T20:21:49+0000,
AZfhZ6pH_yZdEi8IdFAN,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,461,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T20:21:49+0000,2025-07-06T20:21:49+0000,
AZfhZ6pH_yZdEi8IdFAO,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,518,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T20:21:49+0000,2025-07-06T20:21:49+0000,
AZfhZ6pH_yZdEi8IdFAP,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,519,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T20:21:49+0000,2025-07-06T20:21:49+0000,
AZfhZ6pH_yZdEi8IdFAQ,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,520,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T20:21:49+0000,2025-07-06T20:21:49+0000,
AZfhZ6pH_yZdEi8IdFAR,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,521,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T20:21:49+0000,2025-07-06T20:21:49+0000,
AZfhZ6pH_yZdEi8IdFAS,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,594,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T20:21:49+0000,2025-07-06T20:21:49+0000,
AZfhZ6pH_yZdEi8IdFAT,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,596,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T20:21:49+0000,2025-07-06T20:21:49+0000,
AZfhZ6pH_yZdEi8IdFAU,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,598,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T20:21:49+0000,2025-07-06T20:21:49+0000,
AZfhZ6pH_yZdEi8IdFAV,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,600,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T20:21:49+0000,2025-07-06T20:21:49+0000,
AZfhZ6pH_yZdEi8IdFAW,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,601,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T20:21:49+0000,2025-07-06T20:21:49+0000,
AZfhScr6OVcFHjCfYyuM,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,595,"Use ""contains"" member function.",OPEN,2min,2min,developer@heimdall.dev,"clumsy,since-c++20",2025-07-06T19:49:09+0000,2025-07-06T19:49:09+0000,
AZfhScr6OVcFHjCfYyuO,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,597,"Use ""contains"" member function.",OPEN,2min,2min,developer@heimdall.dev,"clumsy,since-c++20",2025-07-06T19:49:09+0000,2025-07-06T19:49:09+0000,
AZfhScr6OVcFHjCfYyuL,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,599,"Use ""contains"" member function.",OPEN,2min,2min,developer@heimdall.dev,"clumsy,since-c++20",2025-07-06T19:49:09+0000,2025-07-06T19:49:09+0000,
AZfgY2j1XXsaA10sYmd9,cpp:S6010,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,130,"Change type of ""fullPath"" to ""std::filesystem::path"".",OPEN,15min,15min,tbakker@example.com,"clumsy,performance,since-c++17",2025-07-06T15:37:13+0000,2025-07-06T15:37:13+0000,
AZfgWcKfCRqVXFCv_m5l,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_integration.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_integration.cpp,416,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-06T15:27:08+0000,2025-07-10T12:18:31+0000,
AZfgRD8pXXsaA10sX6cE,cpp:S1820,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/ComponentInfo.hpp,Heimdall-SBOM_heimdall,src/common/ComponentInfo.hpp,81,"Refactor this structure so it has no more than 20 fields, rather than the 23 it currently has.",OPEN,1h,1h,tbakker@example.com,brain-overload,2025-07-06T15:02:13+0000,2025-07-06T20:28:16+0000,
AZfgRD5RXXsaA10sX6cD,cpp:S3624,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/DWARFExtractor.hpp,Heimdall-SBOM_heimdall,src/common/DWARFExtractor.hpp,64,Customize this class' move constructor and move assignment operator to participate in resource management.,OPEN,30min,30min,tbakker@example.com,"cert,leak,pitfall",2025-07-06T15:02:13+0000,2025-07-06T23:50:48+0000,
AZfgPZAdPrcFnnHeQ4ud,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1478,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T14:56:40+0000,2025-07-06T14:56:40+0000,
AZfgPZAdPrcFnnHeQ4ue,cpp:S3630,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1496,"Replace ""reinterpret_cast"" with a safer operation.",OPEN,20min,20min,tbakker@example.com,"cppcoreguidelines,pitfall",2025-07-06T14:56:40+0000,2025-07-06T14:56:40+0000,
AZfgPZAdPrcFnnHeQ4uf,cpp:S3630,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1497,"Replace ""reinterpret_cast"" with a safer operation.",OPEN,20min,20min,tbakker@example.com,"cppcoreguidelines,pitfall",2025-07-06T14:56:40+0000,2025-07-06T14:56:40+0000,
AZfgPZAdPrcFnnHeQ4ug,cpp:S1659,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1556,Define each identifier in a dedicated statement.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,convention",2025-07-06T14:56:40+0000,2025-07-06T14:56:40+0000,
AZfgPZAdPrcFnnHeQ4uh,cpp:S3630,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1565,"Replace ""reinterpret_cast"" with a safer operation.",OPEN,20min,20min,tbakker@example.com,"cppcoreguidelines,pitfall",2025-07-06T14:56:40+0000,2025-07-06T14:56:40+0000,
AZfgPZAdPrcFnnHeQ4ui,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1614,"Use the init-statement to declare ""memberName"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-06T14:56:40+0000,2025-07-06T14:56:40+0000,
AZfgJZ9bqk9ledNQJxit,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/lld/LLDPlugin.cpp,Heimdall-SBOM_heimdall,src/lld/LLDPlugin.cpp,326,"Use the init-statement to declare ""moduleName"" inside the if statement.",OPEN,2min,2min,trevor.bakker@uta.edu,"clumsy,since-c++17",2025-07-06T14:29:07+0000,2025-07-06T14:29:07+0000,
AZfgJZ9bqk9ledNQJxiu,cpp:S5350,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/lld/LLDPlugin.cpp,Heimdall-SBOM_heimdall,src/lld/LLDPlugin.cpp,331,"Make the type of this variable a reference-to-const. The current type of ""F"" is ""class llvm::Function &"".",OPEN,2min,2min,trevor.bakker@uta.edu,"bad-practice,based-on-misra",2025-07-06T14:29:07+0000,2025-07-06T14:29:07+0000,
AZfgJZ9bqk9ledNQJxiv,cpp:S5350,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/lld/LLDPlugin.cpp,Heimdall-SBOM_heimdall,src/lld/LLDPlugin.cpp,341,"Make the type of this variable a reference-to-const. The current type of ""GV"" is ""class llvm::GlobalVariable &"".",OPEN,2min,2min,trevor.bakker@uta.edu,"bad-practice,based-on-misra",2025-07-06T14:29:07+0000,2025-07-06T14:29:07+0000,
AZfgE1yfqk9ledNQJRHd,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,589,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T14:08:55+0000,2025-07-06T14:08:55+0000,
AZfgE10kqk9ledNQJRHe,cpp:S995,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/lld/LLDPlugin.cpp,Heimdall-SBOM_heimdall,src/lld/LLDPlugin.cpp,54,"Make the type of this parameter a pointer-to-const. The current type of this unnamed parameter is ""void *"".",OPEN,2min,2min,tbakker@example.com,"bad-practice,misra-c++2008,misra-c2004,misra-c2012",2025-07-06T14:08:55+0000,2025-07-06T14:08:55+0000,
AZf0SG-AamoZJ6FAQuVy,cpp:S5421,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/gold/GoldPlugin.cpp,Heimdall-SBOM_heimdall,src/gold/GoldPlugin.cpp,33,Global variables should be const.,OPEN,20min,20min,tbakker@example.com,"bad-practice,cppcoreguidelines,pitfall",2025-07-06T14:06:27+0000,2025-07-10T11:59:39+0000,
AZf0SG-AamoZJ6FAQuVz,cpp:S5421,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/gold/GoldPlugin.cpp,Heimdall-SBOM_heimdall,src/gold/GoldPlugin.cpp,34,Global variables should be const.,OPEN,20min,20min,tbakker@example.com,"bad-practice,cppcoreguidelines,pitfall",2025-07-06T14:06:27+0000,2025-07-10T11:59:39+0000,
AZf0SG-AamoZJ6FAQuV0,cpp:S5421,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/gold/GoldPlugin.cpp,Heimdall-SBOM_heimdall,src/gold/GoldPlugin.cpp,35,Global variables should be const.,OPEN,20min,20min,tbakker@example.com,"bad-practice,cppcoreguidelines,pitfall",2025-07-06T14:06:27+0000,2025-07-10T11:59:39+0000,
AZf0SG89amoZJ6FAQuVd,cpp:S5421,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/lld/LLDPlugin.cpp,Heimdall-SBOM_heimdall,src/lld/LLDPlugin.cpp,43,Global variables should be const.,OPEN,20min,20min,tbakker@example.com,"bad-practice,cppcoreguidelines,pitfall",2025-07-06T14:06:27+0000,2025-07-10T11:59:39+0000,
AZf0SG89amoZJ6FAQuVe,cpp:S5421,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/lld/LLDPlugin.cpp,Heimdall-SBOM_heimdall,src/lld/LLDPlugin.cpp,44,Global variables should be const.,OPEN,20min,20min,tbakker@example.com,"bad-practice,cppcoreguidelines,pitfall",2025-07-06T14:06:27+0000,2025-07-10T11:59:39+0000,
AZf0SG89amoZJ6FAQuVf,cpp:S5421,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/lld/LLDPlugin.cpp,Heimdall-SBOM_heimdall,src/lld/LLDPlugin.cpp,45,Global variables should be const.,OPEN,20min,20min,tbakker@example.com,"bad-practice,cppcoreguidelines,pitfall",2025-07-06T14:06:27+0000,2025-07-10T11:59:39+0000,
AZf0SG89amoZJ6FAQuVg,cpp:S5421,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/lld/LLDPlugin.cpp,Heimdall-SBOM_heimdall,src/lld/LLDPlugin.cpp,46,Global variables should be const.,OPEN,20min,20min,tbakker@example.com,"bad-practice,cppcoreguidelines,pitfall",2025-07-06T14:06:27+0000,2025-07-10T11:59:39+0000,
AZf0SG89amoZJ6FAQuVh,cpp:S5421,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/lld/LLDPlugin.cpp,Heimdall-SBOM_heimdall,src/lld/LLDPlugin.cpp,47,Global variables should be const.,OPEN,20min,20min,tbakker@example.com,"bad-practice,cppcoreguidelines,pitfall",2025-07-06T14:06:27+0000,2025-07-10T11:59:39+0000,
AZf0SG89amoZJ6FAQuVi,cpp:S5421,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/lld/LLDPlugin.cpp,Heimdall-SBOM_heimdall,src/lld/LLDPlugin.cpp,48,Global variables should be const.,OPEN,20min,20min,tbakker@example.com,"bad-practice,cppcoreguidelines,pitfall",2025-07-06T14:06:27+0000,2025-07-10T11:59:39+0000,
AZff8_GAqk9ledNQIyh4,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/ComponentInfo.cpp,Heimdall-SBOM_heimdall,src/common/ComponentInfo.cpp,80,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_GAqk9ledNQIyhx,cpp:S3230,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/ComponentInfo.cpp,Heimdall-SBOM_heimdall,src/common/ComponentInfo.cpp,97,"Remove this use of the constructor's initializer list for data member ""wasProcessed"". It is redundant with the in-class initializer.",OPEN,10min,10min,tbakker@example.com,"cppcoreguidelines,performance",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_GAqk9ledNQIyhy,cpp:S3230,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/ComponentInfo.cpp,Heimdall-SBOM_heimdall,src/common/ComponentInfo.cpp,98,"Remove this use of the constructor's initializer list for data member ""detectedBy"". It is redundant with the in-class initializer.",OPEN,10min,10min,tbakker@example.com,"cppcoreguidelines,performance",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_GAqk9ledNQIyhz,cpp:S3230,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/ComponentInfo.cpp,Heimdall-SBOM_heimdall,src/common/ComponentInfo.cpp,99,"Remove this use of the constructor's initializer list for data member ""isSystemLibrary"". It is redundant with the in-class initializer.",OPEN,10min,10min,tbakker@example.com,"cppcoreguidelines,performance",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_GAqk9ledNQIyh0,cpp:S3230,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/ComponentInfo.cpp,Heimdall-SBOM_heimdall,src/common/ComponentInfo.cpp,100,"Remove this use of the constructor's initializer list for data member ""containsDebugInfo"". It is redundant with the in-class initializer.",OPEN,10min,10min,tbakker@example.com,"cppcoreguidelines,performance",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_GAqk9ledNQIyh1,cpp:S3230,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/ComponentInfo.cpp,Heimdall-SBOM_heimdall,src/common/ComponentInfo.cpp,101,"Remove this use of the constructor's initializer list for data member ""isStripped"". It is redundant with the in-class initializer.",OPEN,10min,10min,tbakker@example.com,"cppcoreguidelines,performance",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_GAqk9ledNQIyh5,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/ComponentInfo.cpp,Heimdall-SBOM_heimdall,src/common/ComponentInfo.cpp,129,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_GAqk9ledNQIyh6,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/ComponentInfo.cpp,Heimdall-SBOM_heimdall,src/common/ComponentInfo.cpp,137,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_GAqk9ledNQIyh7,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/ComponentInfo.cpp,Heimdall-SBOM_heimdall,src/common/ComponentInfo.cpp,145,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_GAqk9ledNQIyh8,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/ComponentInfo.cpp,Heimdall-SBOM_heimdall,src/common/ComponentInfo.cpp,153,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_GAqk9ledNQIyh9,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/ComponentInfo.cpp,Heimdall-SBOM_heimdall,src/common/ComponentInfo.cpp,169,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_GAqk9ledNQIyh-,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/ComponentInfo.cpp,Heimdall-SBOM_heimdall,src/common/ComponentInfo.cpp,184,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_GAqk9ledNQIyh2,cpp:S6177,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/ComponentInfo.cpp,Heimdall-SBOM_heimdall,src/common/ComponentInfo.cpp,247,"Reduce verbosity with ""using enum"" for ""heimdall::FileType"".",OPEN,2min,2min,tbakker@example.com,since-c++20,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_GAqk9ledNQIyh3,cpp:S6177,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/ComponentInfo.cpp,Heimdall-SBOM_heimdall,src/common/ComponentInfo.cpp,266,"Reduce verbosity with ""using enum"" for ""heimdall::LinkerType"".",OPEN,2min,2min,tbakker@example.com,since-c++20,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_GRqk9ledNQIyh_,cpp:S5817,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/DWARFExtractor.cpp,Heimdall-SBOM_heimdall,src/common/DWARFExtractor.cpp,528,"This function should be declared ""const"".",OPEN,5min,5min,tbakker@example.com,"confusing,pitfall",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_GRqk9ledNQIyiA,cpp:S995,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/DWARFExtractor.cpp,Heimdall-SBOM_heimdall,src/common/DWARFExtractor.cpp,529,"Make the type of this parameter a reference-to-const. The current type of ""sourceFiles"" is ""class std::vector<class std::basic_string<char> > &"".",OPEN,2min,2min,tbakker@example.com,"bad-practice,misra-c++2008,misra-c2004,misra-c2012",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygB,cpp:S5817,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,239,"This function should be declared ""const"".",OPEN,5min,5min,tbakker@example.com,"confusing,pitfall",2025-07-06T13:34:33+0000,2025-07-08T17:31:10+0000,
AZff8_Fhqk9ledNQIygC,cpp:S5817,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,264,"This function should be declared ""const"".",OPEN,5min,5min,tbakker@example.com,"confusing,pitfall",2025-07-06T13:34:33+0000,2025-07-08T17:31:10+0000,
AZff8_Fhqk9ledNQIygD,cpp:S5817,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,328,"This function should be declared ""const"".",OPEN,5min,5min,tbakker@example.com,"confusing,pitfall",2025-07-06T13:34:33+0000,2025-07-08T17:31:10+0000,
AZff8_Fhqk9ledNQIygE,cpp:S5817,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,332,"This function should be declared ""const"".",OPEN,5min,5min,tbakker@example.com,"confusing,pitfall",2025-07-06T13:34:33+0000,2025-07-08T17:31:10+0000,
AZff8_Fhqk9ledNQIygF,cpp:S5817,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,341,"This function should be declared ""const"".",OPEN,5min,5min,tbakker@example.com,"confusing,pitfall",2025-07-06T13:34:33+0000,2025-07-08T17:31:10+0000,
AZff8_Fhqk9ledNQIygG,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,358,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygH,cpp:S1172,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,358,"Remove the unused parameter ""filePath"", make it unnamed, or declare it ""[[maybe_unused]]"".",OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,unused",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygI,cpp:S5817,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,379,"This function should be declared ""const"".",OPEN,5min,5min,tbakker@example.com,"confusing,pitfall",2025-07-06T13:34:33+0000,2025-07-08T17:31:10+0000,
AZff8_Fhqk9ledNQIygJ,cpp:S5817,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,395,"This function should be declared ""const"".",OPEN,5min,5min,tbakker@example.com,"confusing,pitfall",2025-07-06T13:34:33+0000,2025-07-08T17:31:10+0000,
AZff8_Fhqk9ledNQIygM,cpp:S5817,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,411,"This function should be declared ""const"".",OPEN,5min,5min,tbakker@example.com,"confusing,pitfall",2025-07-06T13:34:33+0000,2025-07-08T17:31:10+0000,
AZff8_Fhqk9ledNQIygK,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,416,"Use the init-statement to declare ""version"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygL,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,422,"Use the init-statement to declare ""packageName"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygP,cpp:S5817,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,430,"This function should be declared ""const"".",OPEN,5min,5min,tbakker@example.com,"confusing,pitfall",2025-07-06T13:34:33+0000,2025-07-08T17:31:10+0000,
AZff8_Fhqk9ledNQIygN,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,435,"Use the init-statement to declare ""version"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygO,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,441,"Use the init-statement to declare ""packageName"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygR,cpp:S5817,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,449,"This function should be declared ""const"".",OPEN,5min,5min,tbakker@example.com,"confusing,pitfall",2025-07-06T13:34:33+0000,2025-07-08T17:31:10+0000,
AZff8_Fhqk9ledNQIygQ,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,479,"Use the init-statement to declare ""packageName"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygU,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,599,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygV,cpp:S1172,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,599,"Remove the unused parameter ""filePath"", make it unnamed, or declare it ""[[maybe_unused]]"".",OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,unused",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygW,cpp:S1172,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,599,"Remove the unused parameter ""symbols"", make it unnamed, or declare it ""[[maybe_unused]]"".",OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,unused",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygX,cpp:S995,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,599,"Make the type of this parameter a reference-to-const. The current type of ""symbols"" is ""class std::vector<struct heimdall::SymbolInfo> &"".",OPEN,2min,2min,tbakker@example.com,"bad-practice,misra-c++2008,misra-c2004,misra-c2012",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygY,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,751,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygZ,cpp:S1172,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,751,"Remove the unused parameter ""filePath"", make it unnamed, or declare it ""[[maybe_unused]]"".",OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,unused",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIyga,cpp:S1172,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,751,"Remove the unused parameter ""sections"", make it unnamed, or declare it ""[[maybe_unused]]"".",OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,unused",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygb,cpp:S995,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,751,"Make the type of this parameter a reference-to-const. The current type of ""sections"" is ""class std::vector<struct heimdall::SectionInfo> &"".",OPEN,2min,2min,tbakker@example.com,"bad-practice,misra-c++2008,misra-c2004,misra-c2012",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygc,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,849,"Use the init-statement to declare ""match"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygd,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,857,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIyge,cpp:S1172,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,857,"Remove the unused parameter ""filePath"", make it unnamed, or declare it ""[[maybe_unused]]"".",OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,unused",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygf,cpp:S1172,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,857,"Remove the unused parameter ""buildId"", make it unnamed, or declare it ""[[maybe_unused]]"".",OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,unused",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygg,cpp:S995,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,857,"Make the type of this parameter a reference-to-const. The current type of ""buildId"" is ""class std::basic_string<char> &"".",OPEN,2min,2min,tbakker@example.com,"bad-practice,misra-c++2008,misra-c2004,misra-c2012",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygh,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,972,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygi,cpp:S1172,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,972,"Remove the unused parameter ""filePath"", make it unnamed, or declare it ""[[maybe_unused]]"".",OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,unused",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygj,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1054,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygk,cpp:S1172,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1054,"Remove the unused parameter ""filePath"", make it unnamed, or declare it ""[[maybe_unused]]"".",OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,unused",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygl,cpp:S1172,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1054,"Remove the unused parameter ""symbols"", make it unnamed, or declare it ""[[maybe_unused]]"".",OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,unused",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygm,cpp:S995,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1054,"Make the type of this parameter a reference-to-const. The current type of ""symbols"" is ""class std::vector<struct heimdall::SymbolInfo> &"".",OPEN,2min,2min,tbakker@example.com,"bad-practice,misra-c++2008,misra-c2004,misra-c2012",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygn,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1164,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygo,cpp:S1172,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1164,"Remove the unused parameter ""filePath"", make it unnamed, or declare it ""[[maybe_unused]]"".",OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,unused",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygp,cpp:S1172,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1165,"Remove the unused parameter ""sections"", make it unnamed, or declare it ""[[maybe_unused]]"".",OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,unused",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygq,cpp:S995,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1165,"Make the type of this parameter a reference-to-const. The current type of ""sections"" is ""class std::vector<struct heimdall::SectionInfo> &"".",OPEN,2min,2min,tbakker@example.com,"bad-practice,misra-c++2008,misra-c2004,misra-c2012",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygv,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1253,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygw,cpp:S1172,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1253,"Remove the unused parameter ""filePath"", make it unnamed, or declare it ""[[maybe_unused]]"".",OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,unused",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygx,cpp:S1172,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1253,"Remove the unused parameter ""uuid"", make it unnamed, or declare it ""[[maybe_unused]]"".",OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,unused",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIygy,cpp:S995,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1253,"Make the type of this parameter a reference-to-const. The current type of ""uuid"" is ""class std::basic_string<char> &"".",OPEN,2min,2min,tbakker@example.com,"bad-practice,misra-c++2008,misra-c2004,misra-c2012",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIyhE,cpp:S6185,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1621,Use std::format instead of concatenating pieces manually.,OPEN,3min,3min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIyhJ,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1659,"Use the init-statement to declare ""sourceFiles"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIyhK,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1668,"Use the init-statement to declare ""compileUnits"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIyhL,cpp:S6005,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1729,Replace this declaration by a structured binding declaration.,OPEN,2min,2min,tbakker@example.com,"clumsy,cppcoreguidelines,since-c++17",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIyhM,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1742,"Use the init-statement to declare ""normalizedPath"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fhqk9ledNQIyhN,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1742,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fiqk9ledNQIyhO,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1744,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fiqk9ledNQIyhP,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1746,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fiqk9ledNQIyhQ,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1748,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fiqk9ledNQIyhR,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1750,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fiqk9ledNQIyhS,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1761,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fiqk9ledNQIyhT,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1763,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fiqk9ledNQIyhU,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1765,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fiqk9ledNQIyhV,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1767,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fiqk9ledNQIyhW,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1769,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fiqk9ledNQIyhX,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,2092,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fiqk9ledNQIyhY,cpp:S1172,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,2092,"Remove the unused parameter ""filePath"", make it unnamed, or declare it ""[[maybe_unused]]"".",OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,unused",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fiqk9ledNQIyhZ,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,2111,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fiqk9ledNQIyha,cpp:S1172,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,2111,"Remove the unused parameter ""filePath"", make it unnamed, or declare it ""[[maybe_unused]]"".",OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,unused",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fiqk9ledNQIyhb,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,2121,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fiqk9ledNQIyhc,cpp:S1172,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,2121,"Remove the unused parameter ""filePath"", make it unnamed, or declare it ""[[maybe_unused]]"".",OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,unused",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_FEqk9ledNQIyf8,cpp:S6185,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/PluginInterface.cpp,Heimdall-SBOM_heimdall,src/common/PluginInterface.cpp,114,Use std::format instead of concatenating pieces manually.,OPEN,3min,3min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_FEqk9ledNQIyf9,cpp:S5566,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/PluginInterface.cpp,Heimdall-SBOM_heimdall,src/common/PluginInterface.cpp,275,"Replace this range for-loop by ""std::ranges::any_of"".",OPEN,5min,5min,tbakker@example.com,"clumsy,cppcoreguidelines",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_FEqk9ledNQIyf-,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/PluginInterface.cpp,Heimdall-SBOM_heimdall,src/common/PluginInterface.cpp,289,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_FEqk9ledNQIyf_,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/PluginInterface.cpp,Heimdall-SBOM_heimdall,src/common/PluginInterface.cpp,300,"Use the init-statement to declare ""match"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_FEqk9ledNQIygA,cpp:S886,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/PluginInterface.cpp,Heimdall-SBOM_heimdall,src/common/PluginInterface.cpp,360,Refactor this loop so that it is less error-prone.,OPEN,10min,10min,tbakker@example.com,based-on-misra,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fwqk9ledNQIyhh,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,222,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fwqk9ledNQIyhi,cpp:S6185,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,266,Use std::format instead of concatenating pieces manually.,OPEN,3min,3min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fwqk9ledNQIyhj,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,292,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fwqk9ledNQIyhk,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,333,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fwqk9ledNQIyhl,cpp:S5566,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,334,"Replace this range for-loop by ""std::ranges::contains"".",OPEN,5min,5min,tbakker@example.com,"clumsy,cppcoreguidelines",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fwqk9ledNQIyhm,cpp:S6005,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,334,Replace this declaration by a structured binding declaration.,OPEN,2min,2min,tbakker@example.com,"clumsy,cppcoreguidelines,since-c++17",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fwqk9ledNQIyhn,cpp:S6005,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,352,Replace this declaration by a structured binding declaration.,OPEN,2min,2min,tbakker@example.com,"clumsy,cppcoreguidelines,since-c++17",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fwqk9ledNQIyhg,cpp:S6177,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,355,"Reduce verbosity with ""using enum"" for ""heimdall::FileType"".",OPEN,2min,2min,tbakker@example.com,since-c++20,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fwqk9ledNQIyhd,cpp:S1117,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,394,declaration shadows a field of 'heimdall::SBOMGenerator::Impl',OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,pitfall,suspicious",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fwqk9ledNQIyhe,cpp:S1117,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,434,declaration shadows a field of 'heimdall::SBOMGenerator::Impl',OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,pitfall,suspicious",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fwqk9ledNQIyhp,cpp:S6005,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,492,Replace this declaration by a structured binding declaration.,OPEN,2min,2min,tbakker@example.com,"clumsy,cppcoreguidelines,since-c++17",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fwqk9ledNQIyho,cpp:S6005,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,540,Replace this declaration by a structured binding declaration.,OPEN,2min,2min,tbakker@example.com,"clumsy,cppcoreguidelines,since-c++17",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Fwqk9ledNQIyhq,cpp:S6005,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,590,Replace this declaration by a structured binding declaration.,OPEN,2min,2min,tbakker@example.com,"clumsy,cppcoreguidelines,since-c++17",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyiB,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,144,"Use the init-statement to declare ""md"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyiC,cpp:S1066,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,157,"Merge this ""if"" statement with the enclosing one.",OPEN,5min,5min,tbakker@example.com,clumsy,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyiD,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,205,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyiE,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,260,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyiF,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,260,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyiG,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,273,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyiH,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,273,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyiI,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,287,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyiJ,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,287,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,tbakker@example.com,since-c++17,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyiK,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,303,"Use the init-statement to declare ""buffer"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyiL,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,348,"Use the init-statement to declare ""libPath"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyiM,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,406,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyiN,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,408,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyiO,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,410,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyiP,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,412,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyiQ,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,414,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyiR,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,415,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyiS,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,431,"Use the init-statement to declare ""match"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyiT,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,505,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyiU,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,508,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyiV,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,612,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyiW,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,618,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyiX,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,623,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyiY,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,626,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyiZ,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,629,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyia,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,632,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyib,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,637,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyic,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,640,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyid,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,645,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyie,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,648,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyif,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,664,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyig,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,667,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyih,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,670,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gnqk9ledNQIyii,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,673,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_HEqk9ledNQIyip,cpp:S6197,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/gold/GoldAdapter.cpp,Heimdall-SBOM_heimdall,src/gold/GoldAdapter.cpp,64,"Replace with the version of ""std::ranges::find"" that takes a range.",OPEN,2min,2min,tbakker@example.com,"bad-practice,clumsy,since-c++20",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_HEqk9ledNQIyiq,cpp:S5817,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/gold/GoldAdapter.cpp,Heimdall-SBOM_heimdall,src/gold/GoldAdapter.cpp,78,"This function should be declared ""const"".",OPEN,5min,5min,tbakker@example.com,"confusing,pitfall",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_HPqk9ledNQIyit,cpp:S6197,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/gold/GoldPlugin.cpp,Heimdall-SBOM_heimdall,src/gold/GoldPlugin.cpp,194,"Replace with the version of ""std::ranges::find"" that takes a range.",OPEN,2min,2min,tbakker@example.com,"bad-practice,clumsy,since-c++20",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_HPqk9ledNQIyiu,cpp:S6197,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/gold/GoldPlugin.cpp,Heimdall-SBOM_heimdall,src/gold/GoldPlugin.cpp,229,"Replace with the version of ""std::ranges::find"" that takes a range.",OPEN,2min,2min,tbakker@example.com,"bad-practice,clumsy,since-c++20",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Gwqk9ledNQIyil,cpp:S6185,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/lld/LLDAdapter.cpp,Heimdall-SBOM_heimdall,src/lld/LLDAdapter.cpp,161,Use std::format instead of concatenating pieces manually.,OPEN,3min,3min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_Bdqk9ledNQIyf1,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,404,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-06T13:34:33+0000,2025-07-10T12:18:31+0000,
AZff8_Bdqk9ledNQIyf2,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,406,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-06T13:34:33+0000,2025-07-10T12:18:31+0000,
AZff8_Bdqk9ledNQIyf3,cpp:S1854,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,407,Value stored to 'found_data_section' is never read,OPEN,1min,1min,tbakker@example.com,"cert,cwe,symbolic-execution,unused",2025-07-06T13:34:33+0000,2025-07-10T12:18:31+0000,
AZff8_Eeqk9ledNQIyf5,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_extractor.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_extractor.cpp,173,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-06T13:34:33+0000,2025-07-10T12:18:31+0000,
AZff8_Eeqk9ledNQIyf6,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_extractor.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_extractor.cpp,173,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-10T12:18:31+0000,
AZff8_Eeqk9ledNQIyf7,cpp:S1854,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_extractor.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_extractor.cpp,174,Value stored to 'found_helper' is never read,OPEN,1min,1min,tbakker@example.com,"cert,cwe,symbolic-execution,unused",2025-07-06T13:34:33+0000,2025-07-10T12:18:31+0000,
AZff8_EUqk9ledNQIyf4,cpp:S1854,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_metadata_extractor_extended.cpp,Heimdall-SBOM_heimdall,tests/test_metadata_extractor_extended.cpp,160,Value stored to 'found_data_section' is never read,OPEN,1min,1min,tbakker@example.com,"cert,cwe,symbolic-execution,unused",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_BHqk9ledNQIyfw,cpp:S5827,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,273,"Replace the redundant type with ""auto"".",OPEN,2min,2min,tbakker@example.com,"clumsy,cppcoreguidelines,since-c++11",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_BHqk9ledNQIyfz,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,619,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8_BHqk9ledNQIyf0,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,623,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZff8-_Nqk9ledNQIyfv,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_utils_extended.cpp,Heimdall-SBOM_heimdall,tests/test_utils_extended.cpp,204,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-06T13:34:33+0000,2025-07-06T13:34:33+0000,
AZf0SG68amoZJ6FAQuVO,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,663,Convert this string literal to a raw string literal.,OPEN,2min,2min,tbakker@example.com,since-c++11,2025-07-06T13:34:26+0000,2025-07-10T11:59:39+0000,
AZf0SG89amoZJ6FAQuVj,cpp:S3776,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/lld/LLDPlugin.cpp,Heimdall-SBOM_heimdall,src/lld/LLDPlugin.cpp,128,Refactor this function to reduce its Cognitive Complexity from 43 to the 25 allowed.,OPEN,23min,23min,tbakker@example.com,"architecture,brain-overload",2025-07-06T13:34:26+0000,2025-07-10T11:59:39+0000,
AZf0SG89amoZJ6FAQuVm,cpp:S6197,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/lld/LLDPlugin.cpp,Heimdall-SBOM_heimdall,src/lld/LLDPlugin.cpp,249,"Replace with the version of ""std::ranges::find"" that takes a range.",OPEN,2min,2min,tbakker@example.com,"bad-practice,clumsy,since-c++20",2025-07-06T13:34:26+0000,2025-07-10T11:59:39+0000,
AZff4d7s6D22xePu4wN0,cpp:S125,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_integration.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_integration.cpp,591,Remove the commented out code.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,unused",2025-07-06T00:28:28+0000,2025-07-10T12:18:31+0000,
AZff4d-h6D22xePu4wUA,cpp:S5421,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/gold/GoldPlugin.cpp,Heimdall-SBOM_heimdall,src/gold/GoldPlugin.cpp,31,Global variables should be const.,OPEN,20min,20min,tbakker@example.com,"bad-practice,cppcoreguidelines,pitfall",2025-07-06T00:08:20+0000,2025-07-06T13:14:37+0000,
AZff4d-h6D22xePu4wUI,cpp:S6197,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/gold/GoldPlugin.cpp,Heimdall-SBOM_heimdall,src/gold/GoldPlugin.cpp,157,"Replace with the version of ""std::ranges::find"" that takes a range.",OPEN,2min,2min,tbakker@example.com,"bad-practice,clumsy,since-c++20",2025-07-06T00:08:20+0000,2025-07-06T13:14:37+0000,
AZff4d-h6D22xePu4wUH,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/gold/GoldPlugin.cpp,Heimdall-SBOM_heimdall,src/gold/GoldPlugin.cpp,197,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-06T00:08:20+0000,2025-07-06T13:14:37+0000,
AZff4d446D22xePu4v4a,cpp:S5416,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,42,"""using"" should be preferred to ""typedef"" for type aliasing.",OPEN,5min,5min,tbakker@example.com,"cppcoreguidelines,design,since-c++11",2025-07-06T00:08:20+0000,2025-07-06T13:14:37+0000,
AZff4d446D22xePu4v4b,cpp:S5416,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,43,"""using"" should be preferred to ""typedef"" for type aliasing.",OPEN,5min,5min,tbakker@example.com,"cppcoreguidelines,design,since-c++11",2025-07-06T00:08:20+0000,2025-07-06T13:14:37+0000,
AZff4d446D22xePu4v4c,cpp:S5416,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,45,"""using"" should be preferred to ""typedef"" for type aliasing.",OPEN,5min,5min,tbakker@example.com,"cppcoreguidelines,design,since-c++11",2025-07-06T00:08:20+0000,2025-07-06T13:14:37+0000,
AZff4d446D22xePu4v4d,cpp:S5416,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,46,"""using"" should be preferred to ""typedef"" for type aliasing.",OPEN,5min,5min,tbakker@example.com,"cppcoreguidelines,design,since-c++11",2025-07-06T00:08:20+0000,2025-07-06T13:14:37+0000,
AZff4d446D22xePu4v4e,cpp:S5416,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,47,"""using"" should be preferred to ""typedef"" for type aliasing.",OPEN,5min,5min,tbakker@example.com,"cppcoreguidelines,design,since-c++11",2025-07-06T00:08:20+0000,2025-07-06T13:14:37+0000,
AZff4d446D22xePu4v4f,cpp:S3656,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,51,"Member variables should not be ""protected"".",OPEN,20min,20min,tbakker@example.com,"based-on-misra,cppcoreguidelines,pitfall",2025-07-06T00:08:20+0000,2025-07-06T13:14:37+0000,
AZff4d446D22xePu4v4h,cpp:S6010,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,106,"Change type of ""fullPath"" to ""std::filesystem::path"".",OPEN,15min,15min,tbakker@example.com,"clumsy,performance,since-c++17",2025-07-06T00:08:20+0000,2025-07-06T13:14:37+0000,
AZff4d446D22xePu4v4i,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,194,"Use the init-statement to declare ""result"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-06T00:08:20+0000,2025-07-06T13:14:37+0000,
AZff4d446D22xePu4v4j,cpp:S6045,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,202,"Use the transparent comparator ""std::less<>"" with this associative string container.",OPEN,2min,2min,tbakker@example.com,"performance,since-c++14",2025-07-06T00:08:20+0000,2025-07-06T13:14:37+0000,
AZff4d446D22xePu4v4k,cpp:S6045,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,203,"Use the transparent comparator ""std::less<>"" with this associative string container.",OPEN,2min,2min,tbakker@example.com,"performance,since-c++14",2025-07-06T00:08:20+0000,2025-07-06T13:14:37+0000,
AZff4d446D22xePu4v4l,cpp:S6045,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,204,"Use the transparent comparator ""std::less<>"" with this associative string container.",OPEN,2min,2min,tbakker@example.com,"performance,since-c++14",2025-07-06T00:08:20+0000,2025-07-06T13:14:37+0000,
AZff4d446D22xePu4v4m,cpp:S6045,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,205,"Use the transparent comparator ""std::less<>"" with this associative string container.",OPEN,2min,2min,tbakker@example.com,"performance,since-c++14",2025-07-06T00:08:20+0000,2025-07-06T13:14:37+0000,
AZff4d446D22xePu4v4n,cpp:S6045,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,206,"Use the transparent comparator ""std::less<>"" with this associative string container.",OPEN,2min,2min,tbakker@example.com,"performance,since-c++14",2025-07-06T00:08:20+0000,2025-07-06T13:14:37+0000,
AZff4d446D22xePu4v4o,cpp:S5827,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,270,"Replace the redundant type with ""auto"".",OPEN,2min,2min,tbakker@example.com,"clumsy,cppcoreguidelines,since-c++11",2025-07-06T00:08:20+0000,2025-07-06T13:14:37+0000,
AZff4d446D22xePu4v4p,cpp:S5827,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,271,"Replace the redundant type with ""auto"".",OPEN,2min,2min,tbakker@example.com,"clumsy,cppcoreguidelines,since-c++11",2025-07-06T00:08:20+0000,2025-07-06T13:14:37+0000,
AZff4d446D22xePu4v4r,cpp:S5827,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,275,"Replace the redundant type with ""auto"".",OPEN,2min,2min,tbakker@example.com,"clumsy,cppcoreguidelines,since-c++11",2025-07-06T00:08:20+0000,2025-07-06T13:14:37+0000,
AZff4d446D22xePu4v4s,cpp:S5827,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,277,"Replace the redundant type with ""auto"".",OPEN,2min,2min,tbakker@example.com,"clumsy,cppcoreguidelines,since-c++11",2025-07-06T00:08:20+0000,2025-07-06T13:14:37+0000,
AZff4d446D22xePu4v4y,cpp:S6010,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,479,"Change type of ""outputPath"" to ""std::filesystem::path"".",OPEN,15min,15min,tbakker@example.com,"clumsy,performance,since-c++17",2025-07-06T00:08:20+0000,2025-07-06T13:14:37+0000,
AZff4d446D22xePu4v41,cpp:S6045,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,578,"Use the transparent comparator ""std::less<>"" with this associative string container.",OPEN,2min,2min,tbakker@example.com,"performance,since-c++14",2025-07-06T00:08:20+0000,2025-07-06T13:14:37+0000,
AZff4d446D22xePu4v4_,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,620,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T00:08:20+0000,2025-07-06T13:14:37+0000,
AZff4d446D22xePu4v5B,cpp:S6171,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_sbom_consistency.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_sbom_consistency.cpp,624,"Use ""contains"" member function.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++20",2025-07-06T00:08:20+0000,2025-07-06T13:14:37+0000,
AZff4d-E6D22xePu4wSK,cpp:S5421,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/DWARFExtractor.cpp,Heimdall-SBOM_heimdall,src/common/DWARFExtractor.cpp,71,Global variables should be const.,OPEN,20min,20min,tbakker@example.com,"bad-practice,cppcoreguidelines,pitfall",2025-07-05T22:52:41+0000,2025-07-06T13:14:37+0000,
AZff4d7_6D22xePu4wON,cpp:S3656,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_advanced.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_advanced.cpp,47,"Member variables should not be ""protected"".",OPEN,20min,20min,tbakker@example.com,"based-on-misra,cppcoreguidelines,pitfall",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7_6D22xePu4wOP,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_advanced.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_advanced.cpp,204,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7_6D22xePu4wOR,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_advanced.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_advanced.cpp,205,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7_6D22xePu4wOQ,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_advanced.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_advanced.cpp,216,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7_6D22xePu4wOS,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_advanced.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_advanced.cpp,216,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7_6D22xePu4wOg,cpp:S1854,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_advanced.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_advanced.cpp,217,Value stored to 'found_internal' is never read,OPEN,1min,1min,tbakker@example.com,"cert,cwe,symbolic-execution,unused",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7_6D22xePu4wOT,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_advanced.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_advanced.cpp,243,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7_6D22xePu4wOU,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_advanced.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_advanced.cpp,244,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7_6D22xePu4wOV,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_advanced.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_advanced.cpp,272,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7_6D22xePu4wOW,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_advanced.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_advanced.cpp,273,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7_6D22xePu4wOX,cpp:S5945,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_advanced.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_advanced.cpp,350,"Use ""std::string"" instead of a C-style char array.",OPEN,10min,10min,tbakker@example.com,"bad-practice,clumsy,cppcoreguidelines",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7_6D22xePu4wOY,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_advanced.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_advanced.cpp,508,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7_6D22xePu4wOZ,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_advanced.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_advanced.cpp,508,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7_6D22xePu4wOa,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_advanced.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_advanced.cpp,542,"Use the init-statement to declare ""result"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7_6D22xePu4wOb,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_advanced.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_advanced.cpp,552,"Use the init-statement to declare ""source_result"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7_6D22xePu4wOc,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_advanced.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_advanced.cpp,586,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7_6D22xePu4wOd,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_advanced.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_advanced.cpp,587,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7_6D22xePu4wOM,cpp:S1117,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_advanced.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_advanced.cpp,611,declaration shadows a local variable,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,pitfall,suspicious",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7_6D22xePu4wOe,cpp:S1659,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_advanced.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_advanced.cpp,629,Define each identifier in a dedicated statement.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,convention",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7_6D22xePu4wOf,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_advanced.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_advanced.cpp,658,"Use the init-statement to declare ""success"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d5G6D22xePu4v5G,cpp:S3656,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,30,"Member variables should not be ""protected"".",OPEN,20min,20min,tbakker@example.com,"based-on-misra,cppcoreguidelines,pitfall",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d5G6D22xePu4v5O,cpp:S1659,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,180,Define each identifier in a dedicated statement.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,convention",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d5G6D22xePu4v5I,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,186,"Use the init-statement to declare ""source_result"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d5G6D22xePu4v5M,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,192,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d5G6D22xePu4v5P,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,192,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d5G6D22xePu4v5J,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,202,"Use the init-statement to declare ""func_result"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d5G6D22xePu4v5N,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,210,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d5G6D22xePu4v5Q,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,211,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d5G6D22xePu4v5K,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,224,"Use the init-statement to declare ""unit_result"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d5G6D22xePu4v5L,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,230,"Use the init-statement to declare ""line_result"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d5G6D22xePu4v5V,cpp:S1659,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,243,Define each identifier in a dedicated statement.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,convention",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d5G6D22xePu4v5R,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,248,"Use the init-statement to declare ""source_result"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d5G6D22xePu4v5T,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,254,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d5G6D22xePu4v5W,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,254,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d5G6D22xePu4v5S,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,264,"Use the init-statement to declare ""func_result"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d5G6D22xePu4v5U,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,272,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d5G6D22xePu4v5X,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,273,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d5G6D22xePu4v5c,cpp:S1659,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,293,Define each identifier in a dedicated statement.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,convention",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d5G6D22xePu4v5Y,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,298,"Use the init-statement to declare ""source_result"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d5G6D22xePu4v5a,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,304,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d5G6D22xePu4v5d,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,304,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d5G6D22xePu4v5Z,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,314,"Use the init-statement to declare ""func_result"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d5G6D22xePu4v5b,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,322,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d5G6D22xePu4v5e,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,323,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d5G6D22xePu4v5h,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,463,"Use the init-statement to declare ""result"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d5G6D22xePu4v5i,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,473,"Use the init-statement to declare ""source_result"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d5G6D22xePu4v5j,cpp:S1659,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_cross_platform.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_cross_platform.cpp,629,Define each identifier in a dedicated statement.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,convention",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7s6D22xePu4wNf,cpp:S3656,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_integration.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_integration.cpp,49,"Member variables should not be ""protected"".",OPEN,20min,20min,tbakker@example.com,"based-on-misra,cppcoreguidelines,pitfall",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7s6D22xePu4wNg,cpp:S1659,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_integration.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_integration.cpp,237,Define each identifier in a dedicated statement.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,convention",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7s6D22xePu4wNh,cpp:S1659,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_integration.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_integration.cpp,238,Define each identifier in a dedicated statement.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,convention",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7s6D22xePu4wNi,cpp:S1659,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_integration.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_integration.cpp,239,Define each identifier in a dedicated statement.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,convention",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7s6D22xePu4wNj,cpp:S1659,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_integration.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_integration.cpp,240,Define each identifier in a dedicated statement.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,convention",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7s6D22xePu4wNl,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_integration.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_integration.cpp,271,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7s6D22xePu4wNn,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_integration.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_integration.cpp,272,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7s6D22xePu4wNm,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_integration.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_integration.cpp,288,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7s6D22xePu4wNo,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_integration.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_integration.cpp,291,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7s6D22xePu4wNq,cpp:S6185,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_integration.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_integration.cpp,312,Use std::format instead of concatenating pieces manually.,OPEN,3min,3min,tbakker@example.com,"clumsy,since-c++20",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7s6D22xePu4wNp,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_integration.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_integration.cpp,336,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7s6D22xePu4wNr,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_integration.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_integration.cpp,336,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7s6D22xePu4wNs,cpp:S1659,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_integration.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_integration.cpp,351,Define each identifier in a dedicated statement.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,convention",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7s6D22xePu4wNv,cpp:S1659,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_integration.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_integration.cpp,412,Define each identifier in a dedicated statement.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,convention",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7s6D22xePu4wNu,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_integration.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_integration.cpp,428,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7s6D22xePu4wNw,cpp:S6185,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_integration.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_integration.cpp,469,Use std::format instead of concatenating pieces manually.,OPEN,3min,3min,tbakker@example.com,"clumsy,since-c++20",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7s6D22xePu4wNx,cpp:S6185,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_integration.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_integration.cpp,470,Use std::format instead of concatenating pieces manually.,OPEN,3min,3min,tbakker@example.com,"clumsy,since-c++20",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7s6D22xePu4wNy,cpp:S6185,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_integration.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_integration.cpp,471,Use std::format instead of concatenating pieces manually.,OPEN,3min,3min,tbakker@example.com,"clumsy,since-c++20",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7s6D22xePu4wNe,cpp:S1481,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_integration.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_integration.cpp,499,unused variable 'result',OPEN,5min,5min,tbakker@example.com,unused,2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d7s6D22xePu4wNz,cpp:S1854,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_integration.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_integration.cpp,499,Value stored to 'result' during its initialization is never read,OPEN,1min,1min,tbakker@example.com,"cert,cwe,symbolic-execution,unused",2025-07-05T22:52:41+0000,2025-07-10T12:18:31+0000,
AZff4d8f6D22xePu4wPM,cpp:S5945,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,347,"Use ""std::string"" instead of a C-style char array.",OPEN,10min,10min,tbakker@example.com,"bad-practice,clumsy,cppcoreguidelines",2025-07-05T22:24:08+0000,2025-07-06T13:14:37+0000,
AZff4d8f6D22xePu4wPR,cpp:S5945,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,386,"Use ""std::string"" instead of a C-style char array.",OPEN,10min,10min,tbakker@example.com,"bad-practice,clumsy,cppcoreguidelines",2025-07-05T22:24:08+0000,2025-07-06T13:14:37+0000,
AZff4d8f6D22xePu4wPT,cpp:S5945,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,402,"Use ""std::string"" instead of a C-style char array.",OPEN,10min,10min,tbakker@example.com,"bad-practice,clumsy,cppcoreguidelines",2025-07-05T22:24:08+0000,2025-07-06T13:14:37+0000,
AZff4d8f6D22xePu4wPc,cpp:S5945,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,499,"Use ""std::string"" instead of a C-style char array.",OPEN,10min,10min,tbakker@example.com,"bad-practice,clumsy,cppcoreguidelines",2025-07-05T22:24:08+0000,2025-07-06T13:14:37+0000,
AZff4d8f6D22xePu4wPd,cpp:S5945,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,567,"Use ""std::string"" instead of a C-style char array.",OPEN,10min,10min,tbakker@example.com,"bad-practice,clumsy,cppcoreguidelines",2025-07-05T22:24:08+0000,2025-07-06T13:14:37+0000,
AZff4d-E6D22xePu4wSH,cpp:S5421,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/DWARFExtractor.cpp,Heimdall-SBOM_heimdall,src/common/DWARFExtractor.cpp,65,Global variables should be const.,OPEN,20min,20min,tbakker@example.com,"bad-practice,cppcoreguidelines,pitfall",2025-07-05T22:05:27+0000,2025-07-06T13:14:37+0000,
AZff4d-E6D22xePu4wSI,cpp:S5421,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/DWARFExtractor.cpp,Heimdall-SBOM_heimdall,src/common/DWARFExtractor.cpp,66,Global variables should be const.,OPEN,20min,20min,tbakker@example.com,"bad-practice,cppcoreguidelines,pitfall",2025-07-05T22:05:27+0000,2025-07-06T13:14:37+0000,
AZff4d-E6D22xePu4wSJ,cpp:S5421,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/DWARFExtractor.cpp,Heimdall-SBOM_heimdall,src/common/DWARFExtractor.cpp,67,Global variables should be const.,OPEN,20min,20min,tbakker@example.com,"bad-practice,cppcoreguidelines,pitfall",2025-07-05T22:05:27+0000,2025-07-06T13:14:37+0000,
AZff4d-E6D22xePu4wSL,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/DWARFExtractor.cpp,Heimdall-SBOM_heimdall,src/common/DWARFExtractor.cpp,140,"Use the init-statement to declare ""context"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T22:05:27+0000,2025-07-06T13:14:37+0000,
AZff4d-E6D22xePu4wSM,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/DWARFExtractor.cpp,Heimdall-SBOM_heimdall,src/common/DWARFExtractor.cpp,170,"Use the init-statement to declare ""context"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T22:05:27+0000,2025-07-06T13:14:37+0000,
AZff4d-E6D22xePu4wSN,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/DWARFExtractor.cpp,Heimdall-SBOM_heimdall,src/common/DWARFExtractor.cpp,202,"Use the init-statement to declare ""context"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T22:05:27+0000,2025-07-06T13:14:37+0000,
AZff4d-E6D22xePu4wSO,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/DWARFExtractor.cpp,Heimdall-SBOM_heimdall,src/common/DWARFExtractor.cpp,236,"Use the init-statement to declare ""context"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T22:05:27+0000,2025-07-06T13:14:37+0000,
AZff4d-E6D22xePu4wSP,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/DWARFExtractor.cpp,Heimdall-SBOM_heimdall,src/common/DWARFExtractor.cpp,242,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-05T22:05:27+0000,2025-07-06T13:14:37+0000,
AZff4d-E6D22xePu4wSQ,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/DWARFExtractor.cpp,Heimdall-SBOM_heimdall,src/common/DWARFExtractor.cpp,271,"Use the init-statement to declare ""context"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T22:05:27+0000,2025-07-06T13:14:37+0000,
AZff4d-E6D22xePu4wSU,cpp:S1181,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/DWARFExtractor.cpp,Heimdall-SBOM_heimdall,src/common/DWARFExtractor.cpp,368,Catch a more specific exception instead of a generic one.,OPEN,20min,20min,tbakker@example.com,"bad-practice,cert,cppcoreguidelines,cwe,error-handling",2025-07-05T22:05:27+0000,2025-07-06T13:14:37+0000,
AZff4d8S6D22xePu4wO-,cpp:S5421,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/DWARFExtractor.hpp,Heimdall-SBOM_heimdall,src/common/DWARFExtractor.hpp,48,Global variables should be const.,OPEN,20min,20min,tbakker@example.com,"bad-practice,cppcoreguidelines,pitfall",2025-07-05T22:05:27+0000,2025-07-06T13:14:37+0000,
AZff4d8S6D22xePu4wO_,cpp:S5421,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/DWARFExtractor.hpp,Heimdall-SBOM_heimdall,src/common/DWARFExtractor.hpp,49,Global variables should be const.,OPEN,20min,20min,tbakker@example.com,"bad-practice,cppcoreguidelines,pitfall",2025-07-05T22:05:27+0000,2025-07-06T13:14:37+0000,
AZff4d8S6D22xePu4wPA,cpp:S5421,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/DWARFExtractor.hpp,Heimdall-SBOM_heimdall,src/common/DWARFExtractor.hpp,50,Global variables should be const.,OPEN,20min,20min,tbakker@example.com,"bad-practice,cppcoreguidelines,pitfall",2025-07-05T22:05:27+0000,2025-07-06T13:14:37+0000,
AZff4d-E6D22xePu4wST,cpp:S1141,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/DWARFExtractor.cpp,Heimdall-SBOM_heimdall,src/common/DWARFExtractor.cpp,344,Extract this nested try block into a separate method.,OPEN,20min,20min,tbakker@example.com,"confusing,error-handling",2025-07-05T21:07:56+0000,2025-07-06T13:14:37+0000,
AZff4d-E6D22xePu4wSV,cpp:S2738,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/DWARFExtractor.cpp,Heimdall-SBOM_heimdall,src/common/DWARFExtractor.cpp,374,"""catch"" a specific exception type.",OPEN,20min,20min,tbakker@example.com,error-handling,2025-07-05T21:07:56+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wQ1,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1863,"Use the init-statement to declare ""dirName"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T21:07:56+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wQ3,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1863,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T21:07:56+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wQ4,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1864,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T21:07:56+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wQ5,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1897,"Use the init-statement to declare ""dirName"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T21:07:56+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wQ8,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1897,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T21:07:56+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wQ9,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1898,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T21:07:56+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wQ7,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1899,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T21:07:56+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wQ-,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1932,"Use the init-statement to declare ""dirName"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T21:07:56+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wRA,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1932,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T21:07:56+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wRB,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1933,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T21:07:56+0000,2025-07-06T13:14:37+0000,
AZff4d756D22xePu4wN9,cpp:S3656,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_extractor.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_extractor.cpp,26,"Member variables should not be ""protected"".",OPEN,20min,20min,tbakker@example.com,"based-on-misra,cppcoreguidelines,pitfall",2025-07-05T21:07:56+0000,2025-07-10T12:18:31+0000,
AZff4d756D22xePu4wN_,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_extractor.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_extractor.cpp,114,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-05T21:07:56+0000,2025-07-10T12:18:31+0000,
AZff4d756D22xePu4wOA,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_extractor.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_extractor.cpp,114,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T21:07:56+0000,2025-07-10T12:18:31+0000,
AZff4d756D22xePu4wOB,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_extractor.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_extractor.cpp,171,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-05T21:07:56+0000,2025-07-10T12:18:31+0000,
AZff4d756D22xePu4wOD,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_extractor.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_extractor.cpp,171,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T21:07:56+0000,2025-07-10T12:18:31+0000,
AZff4d756D22xePu4wN8,cpp:S1481,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_extractor.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_extractor.cpp,212,unused variable 'has_dwarf',OPEN,5min,5min,tbakker@example.com,unused,2025-07-05T21:07:56+0000,2025-07-10T12:18:31+0000,
AZff4d756D22xePu4wOL,cpp:S1854,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_extractor.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_extractor.cpp,212,Value stored to 'has_dwarf' during its initialization is never read,OPEN,1min,1min,tbakker@example.com,"cert,cwe,symbolic-execution,unused",2025-07-05T21:07:56+0000,2025-07-10T12:18:31+0000,
AZff4d756D22xePu4wOF,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_extractor.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_extractor.cpp,236,"Use the init-statement to declare ""source_result"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T21:07:56+0000,2025-07-10T12:18:31+0000,
AZff4d756D22xePu4wOG,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_extractor.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_extractor.cpp,242,"Use the init-statement to declare ""func_result"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T21:07:56+0000,2025-07-10T12:18:31+0000,
AZff4d756D22xePu4wOI,cpp:S1659,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_extractor.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_extractor.cpp,283,Define each identifier in a dedicated statement.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,convention",2025-07-05T21:07:56+0000,2025-07-10T12:18:31+0000,
AZff4d756D22xePu4wOJ,cpp:S1659,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_extractor.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_extractor.cpp,284,Define each identifier in a dedicated statement.,OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,convention",2025-07-05T21:07:56+0000,2025-07-10T12:18:31+0000,
AZff4d756D22xePu4wOH,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_dwarf_extractor.cpp,Heimdall-SBOM_heimdall,tests/test_dwarf_extractor.cpp,291,"Use the init-statement to declare ""result2"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T21:07:56+0000,2025-07-10T12:18:31+0000,
AZff4d716D22xePu4wN4,cpp:S3656,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_metadata_extractor_extended.cpp,Heimdall-SBOM_heimdall,tests/test_metadata_extractor_extended.cpp,26,"Member variables should not be ""protected"".",OPEN,20min,20min,tbakker@example.com,"based-on-misra,cppcoreguidelines,pitfall",2025-07-05T21:07:56+0000,2025-07-06T13:14:37+0000,
AZff4d716D22xePu4wN6,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_metadata_extractor_extended.cpp,Heimdall-SBOM_heimdall,tests/test_metadata_extractor_extended.cpp,130,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T21:07:56+0000,2025-07-06T13:14:37+0000,
AZff4d8J6D22xePu4wOo,cpp:S5812,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_interface.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_interface.cpp,32,Concatenate this namespace with the nested one.,OPEN,5min,5min,tbakker@example.com,"confusing,since-c++17",2025-07-05T21:07:56+0000,2025-07-06T13:14:37+0000,
AZff4d8J6D22xePu4wOn,cpp:S1117,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_interface.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_interface.cpp,105,declaration shadows a field of 'heimdall::PluginInterface',OPEN,5min,5min,tbakker@example.com,"based-on-misra,cert,pitfall,suspicious",2025-07-05T21:07:56+0000,2025-07-06T13:14:37+0000,
AZff4d8J6D22xePu4wOp,cpp:S3656,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_interface.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_interface.cpp,146,"Member variables should not be ""protected"".",OPEN,20min,20min,tbakker@example.com,"based-on-misra,cppcoreguidelines,pitfall",2025-07-05T21:07:56+0000,2025-07-06T13:14:37+0000,
AZff4d8J6D22xePu4wOq,cpp:S5817,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_interface.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_interface.cpp,160,"This function should be declared ""const"".",OPEN,5min,5min,tbakker@example.com,"confusing,pitfall",2025-07-05T21:07:56+0000,2025-07-06T13:14:37+0000,
AZff4d8J6D22xePu4wOr,cpp:S5817,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_interface.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_interface.cpp,182,"This function should be declared ""const"".",OPEN,5min,5min,tbakker@example.com,"confusing,pitfall",2025-07-05T21:07:56+0000,2025-07-06T13:14:37+0000,
AZff4d8J6D22xePu4wOt,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_interface.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_interface.cpp,558,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T21:07:56+0000,2025-07-06T13:14:37+0000,
AZff4d8J6D22xePu4wOu,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_interface.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_interface.cpp,561,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T21:07:56+0000,2025-07-06T13:14:37+0000,
AZff4d8J6D22xePu4wOv,cpp:S6185,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_interface.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_interface.cpp,653,Use std::format instead of concatenating pieces manually.,OPEN,3min,3min,tbakker@example.com,"clumsy,since-c++20",2025-07-05T21:07:56+0000,2025-07-06T13:14:37+0000,
AZff4d8J6D22xePu4wOw,cpp:S6185,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_plugin_interface.cpp,Heimdall-SBOM_heimdall,tests/test_plugin_interface.cpp,662,Use std::format instead of concatenating pieces manually.,OPEN,3min,3min,tbakker@example.com,"clumsy,since-c++20",2025-07-05T21:07:56+0000,2025-07-06T13:14:37+0000,
AZff4d3W6D22xePu4v4U,cpp:S3656,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_utils_extended.cpp,Heimdall-SBOM_heimdall,tests/test_utils_extended.cpp,25,"Member variables should not be ""protected"".",OPEN,20min,20min,tbakker@example.com,"based-on-misra,cppcoreguidelines,pitfall",2025-07-05T21:07:56+0000,2025-07-06T13:14:37+0000,
AZff4d3W6D22xePu4v4W,cpp:S6022,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_utils_extended.cpp,Heimdall-SBOM_heimdall,tests/test_utils_extended.cpp,39,"Use ""std::byte"" for byte-oriented memory access.",OPEN,5min,5min,tbakker@example.com,"clumsy,pitfall,since-c++17",2025-07-05T21:07:56+0000,2025-07-06T13:14:37+0000,
AZff4d3W6D22xePu4v4X,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_utils_extended.cpp,Heimdall-SBOM_heimdall,tests/test_utils_extended.cpp,202,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T21:07:56+0000,2025-07-06T13:14:37+0000,
AZff4d3W6D22xePu4v4Z,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_utils_extended.cpp,Heimdall-SBOM_heimdall,tests/test_utils_extended.cpp,213,"Use the init-statement to declare ""libc_path"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T21:07:56+0000,2025-07-06T13:14:37+0000,
AZff4d8f6D22xePu4wPH,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,303,"Use the init-statement to declare ""members"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T15:31:55+0000,2025-07-08T17:31:10+0000,
AZff4d8f6D22xePu4wPI,cpp:S6185,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,307,Use std::format instead of concatenating pieces manually.,OPEN,3min,3min,tbakker@example.com,"clumsy,since-c++20",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wQQ,cpp:S5945,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1382,"Use ""std::string"" instead of a C-style char array.",OPEN,10min,10min,tbakker@example.com,"bad-practice,clumsy,cppcoreguidelines",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wQZ,cpp:S5945,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1400,"Use ""std::string"" instead of a C-style char array.",OPEN,10min,10min,tbakker@example.com,"bad-practice,clumsy,cppcoreguidelines",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wQT,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1408,"Use the init-statement to declare ""nullPos"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wQS,cpp:S6185,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1429,Use std::format instead of concatenating pieces manually.,OPEN,3min,3min,tbakker@example.com,"clumsy,since-c++20",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wQP,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1441,"Use the init-statement to declare ""nullPos"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wQi,cpp:S6185,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1463,Use std::format instead of concatenating pieces manually.,OPEN,3min,3min,tbakker@example.com,"clumsy,since-c++20",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wQY,cpp:S1181,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1467,Catch a more specific exception instead of a generic one.,OPEN,20min,20min,tbakker@example.com,"bad-practice,cert,cppcoreguidelines,cwe,error-handling",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wQc,cpp:S886,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1564,Refactor this loop so that it is less error-prone.,OPEN,10min,10min,tbakker@example.com,based-on-misra,2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wQX,cpp:S5945,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1593,"Use ""std::string"" instead of a C-style char array.",OPEN,10min,10min,tbakker@example.com,"bad-practice,clumsy,cppcoreguidelines",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wQW,cpp:S924,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1604,"Reduce the number of nested ""break"" statements from 5 to 1 authorized.",OPEN,20min,20min,tbakker@example.com,"based-on-misra,confusing",2025-07-05T15:31:55+0000,2025-07-06T14:56:40+0000,
AZff4d9p6D22xePu4wQR,cpp:S5945,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1605,"Use ""std::string"" instead of a C-style char array.",OPEN,10min,10min,tbakker@example.com,"bad-practice,clumsy,cppcoreguidelines",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wQa,cpp:S1181,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1633,Catch a more specific exception instead of a generic one.,OPEN,20min,20min,tbakker@example.com,"bad-practice,cert,cppcoreguidelines,cwe,error-handling",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wQj,cpp:S6185,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1648,Use std::format instead of concatenating pieces manually.,OPEN,3min,3min,tbakker@example.com,"clumsy,since-c++20",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wQz,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1840,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wQ0,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1841,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wQy,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1842,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wQ2,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1877,"Use the init-statement to declare ""match"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wQ6,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1912,"Use the init-statement to declare ""match"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wQ_,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1946,"Use the init-statement to declare ""match"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wRC,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1965,"Use the init-statement to declare ""dirName"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wRE,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1965,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wRF,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1966,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wRG,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1981,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wRD,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,1987,"Use the init-statement to declare ""packageName"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wRH,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,2003,"Use the init-statement to declare ""dirName"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wRK,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,2003,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wRL,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,2004,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wRJ,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,2014,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,tbakker@example.com,brain-overload,2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wRM,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,2025,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wRI,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,2030,"Use the init-statement to declare ""packageName"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wRO,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,2047,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wRP,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,2048,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wRQ,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,2063,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9p6D22xePu4wRN,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,2068,"Use the init-statement to declare ""packageName"" inside the if statement.",OPEN,2min,2min,tbakker@example.com,"clumsy,since-c++17",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9_6D22xePu4wSF,cpp:S3656,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/PluginInterface.hpp,Heimdall-SBOM_heimdall,src/common/PluginInterface.hpp,41,"Member variables should not be ""protected"".",OPEN,20min,20min,tbakker@example.com,"based-on-misra,cppcoreguidelines,pitfall",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d9x6D22xePu4wRc,cpp:S6045,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,42,"Use the transparent equality ""std::equal_to<>"" and a custom transparent heterogeneous hasher with this associative string container.",OPEN,2min,2min,tbakker@example.com,"performance,since-c++14",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d-Q6D22xePu4wSj,cpp:S5945,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,163,"Use ""std::string"" instead of a C-style char array.",OPEN,10min,10min,tbakker@example.com,"bad-practice,clumsy,cppcoreguidelines",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d-Q6D22xePu4wS_,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,678,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T15:31:55+0000,2025-07-06T13:14:37+0000,
AZff4d-E6D22xePu4wSR,cpp:S1181,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/DWARFExtractor.cpp,Heimdall-SBOM_heimdall,src/common/DWARFExtractor.cpp,382,Catch a more specific exception instead of a generic one.,OPEN,20min,20min,tbakker@example.com,"bad-practice,cert,cppcoreguidelines,cwe,error-handling",2025-07-05T15:24:58+0000,2025-07-06T13:14:37+0000,
AZff4d-E6D22xePu4wSS,cpp:S2738,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/DWARFExtractor.cpp,Heimdall-SBOM_heimdall,src/common/DWARFExtractor.cpp,388,"""catch"" a specific exception type.",OPEN,20min,20min,tbakker@example.com,error-handling,2025-07-05T15:24:58+0000,2025-07-06T13:14:37+0000,
AZff4d-E6D22xePu4wSY,cpp:S1181,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/DWARFExtractor.cpp,Heimdall-SBOM_heimdall,src/common/DWARFExtractor.cpp,429,Catch a more specific exception instead of a generic one.,OPEN,20min,20min,tbakker@example.com,"bad-practice,cert,cppcoreguidelines,cwe,error-handling",2025-07-05T15:24:58+0000,2025-07-06T13:14:37+0000,
AZff4d-E6D22xePu4wSZ,cpp:S2738,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/DWARFExtractor.cpp,Heimdall-SBOM_heimdall,src/common/DWARFExtractor.cpp,434,"""catch"" a specific exception type.",OPEN,20min,20min,tbakker@example.com,error-handling,2025-07-05T15:24:58+0000,2025-07-06T13:14:37+0000,
AZff4d8S6D22xePu4wPB,cpp:S3539,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/DWARFExtractor.hpp,Heimdall-SBOM_heimdall,src/common/DWARFExtractor.hpp,168,Remove this redundant access specifier; it does not change the accessibility level.,OPEN,2min,2min,tbakker@example.com,"clumsy,redundant",2025-07-05T15:24:58+0000,2025-07-06T13:14:37+0000,
AZff4d8D6D22xePu4wOi,cpp:S3656,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_linux_support.cpp,Heimdall-SBOM_heimdall,tests/test_linux_support.cpp,26,"Member variables should not be ""protected"".",OPEN,20min,20min,tbakker@example.com,"based-on-misra,cppcoreguidelines,pitfall",2025-07-05T15:24:58+0000,2025-07-06T13:14:37+0000,
AZff4d8D6D22xePu4wOl,cpp:S1854,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_linux_support.cpp,Heimdall-SBOM_heimdall,tests/test_linux_support.cpp,122,Value stored to 'found_data' is never read,OPEN,1min,1min,tbakker@example.com,"cert,cwe,symbolic-execution,unused",2025-07-05T15:24:58+0000,2025-07-06T13:14:37+0000,
AZff4d8D6D22xePu4wOh,cpp:S1481,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_linux_support.cpp,Heimdall-SBOM_heimdall,tests/test_linux_support.cpp,139,unused variable 'result',OPEN,5min,5min,tbakker@example.com,unused,2025-07-05T15:24:58+0000,2025-07-06T13:14:37+0000,
AZff4d8D6D22xePu4wOm,cpp:S1854,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_linux_support.cpp,Heimdall-SBOM_heimdall,tests/test_linux_support.cpp,139,Value stored to 'result' during its initialization is never read,OPEN,1min,1min,tbakker@example.com,"cert,cwe,symbolic-execution,unused",2025-07-05T15:24:58+0000,2025-07-06T13:14:37+0000,
AZff4d8D6D22xePu4wOk,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_linux_support.cpp,Heimdall-SBOM_heimdall,tests/test_linux_support.cpp,194,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T15:24:58+0000,2025-07-06T13:14:37+0000,
AZff4d7w6D22xePu4wN1,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_package_manager_and_archive.cpp,Heimdall-SBOM_heimdall,tests/test_package_manager_and_archive.cpp,130,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T15:24:58+0000,2025-07-06T13:14:37+0000,
AZff4d7w6D22xePu4wN2,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_package_manager_and_archive.cpp,Heimdall-SBOM_heimdall,tests/test_package_manager_and_archive.cpp,152,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,tbakker@example.com,"clumsy,since-c++23",2025-07-05T15:24:58+0000,2025-07-06T13:14:37+0000,
AZff4d7w6D22xePu4wN3,cpp:S1155,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_package_manager_and_archive.cpp,Heimdall-SBOM_heimdall,tests/test_package_manager_and_archive.cpp,160,"Use ""empty()"" to check whether the container is empty or not.",OPEN,2min,2min,tbakker@example.com,"clumsy,cppcoreguidelines",2025-07-05T15:24:58+0000,2025-07-06T13:14:37+0000,
AZff4d966D22xePu4wR7,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/ComponentInfo.cpp,Heimdall-SBOM_heimdall,src/common/ComponentInfo.cpp,67,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,trevor.bakker@uta.edu,since-c++17,2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d966D22xePu4wR8,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/ComponentInfo.cpp,Heimdall-SBOM_heimdall,src/common/ComponentInfo.cpp,67,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,trevor.bakker@uta.edu,since-c++17,2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d966D22xePu4wSA,cpp:S6009,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/ComponentInfo.cpp,Heimdall-SBOM_heimdall,src/common/ComponentInfo.cpp,161,"Replace this const reference to ""std::string"" by a ""std::string_view"".",OPEN,2min,2min,trevor.bakker@uta.edu,since-c++17,2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d8f6D22xePu4wPK,cpp:S5817,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/MetadataExtractor.cpp,Heimdall-SBOM_heimdall,src/common/MetadataExtractor.cpp,358,"This function should be declared ""const"".",OPEN,5min,5min,trevor.bakker@uta.edu,"confusing,pitfall",2025-07-05T00:03:59+0000,2025-07-08T17:31:10+0000,
AZff4d8O6D22xePu4wOx,cpp:S3230,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/PluginInterface.cpp,Heimdall-SBOM_heimdall,src/common/PluginInterface.cpp,40,"Remove this use of the constructor's initializer list for data member ""verbose"". It is redundant with the in-class initializer.",OPEN,10min,10min,trevor.bakker@uta.edu,"cppcoreguidelines,performance",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d8O6D22xePu4wOy,cpp:S3230,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/PluginInterface.cpp,Heimdall-SBOM_heimdall,src/common/PluginInterface.cpp,41,"Remove this use of the constructor's initializer list for data member ""extractDebugInfo"". It is redundant with the in-class initializer.",OPEN,10min,10min,trevor.bakker@uta.edu,"cppcoreguidelines,performance",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d8O6D22xePu4wOz,cpp:S3230,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/PluginInterface.cpp,Heimdall-SBOM_heimdall,src/common/PluginInterface.cpp,42,"Remove this use of the constructor's initializer list for data member ""includeSystemLibraries"". It is redundant with the in-class initializer.",OPEN,10min,10min,trevor.bakker@uta.edu,"cppcoreguidelines,performance",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d8O6D22xePu4wO4,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/PluginInterface.cpp,Heimdall-SBOM_heimdall,src/common/PluginInterface.cpp,291,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,trevor.bakker@uta.edu,"clumsy,since-c++23",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d8O6D22xePu4wO5,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/PluginInterface.cpp,Heimdall-SBOM_heimdall,src/common/PluginInterface.cpp,292,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,trevor.bakker@uta.edu,"clumsy,since-c++23",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d8O6D22xePu4wO8,cpp:S6003,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/PluginInterface.cpp,Heimdall-SBOM_heimdall,src/common/PluginInterface.cpp,374,"Replace this use of ""push_back"" with ""emplace_back"".",OPEN,2min,2min,trevor.bakker@uta.edu,"clumsy,performance,since-c++11",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d8O6D22xePu4wO9,cpp:S6003,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/PluginInterface.cpp,Heimdall-SBOM_heimdall,src/common/PluginInterface.cpp,376,"Replace this use of ""push_back"" with ""emplace_back"".",OPEN,2min,2min,trevor.bakker@uta.edu,"clumsy,performance,since-c++11",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d9x6D22xePu4wRj,cpp:S1659,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,349,Define each identifier in a dedicated statement.,OPEN,5min,5min,trevor.bakker@uta.edu,"based-on-misra,cert,convention",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d9x6D22xePu4wRk,cpp:S1659,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,350,Define each identifier in a dedicated statement.,OPEN,5min,5min,trevor.bakker@uta.edu,"based-on-misra,cert,convention",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d9x6D22xePu4wRo,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,570,Convert this string literal to a raw string literal.,OPEN,2min,2min,trevor.bakker@uta.edu,since-c++11,2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d9x6D22xePu4wRr,cpp:S3628,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/SBOMGenerator.cpp,Heimdall-SBOM_heimdall,src/common/SBOMGenerator.cpp,667,Convert this string literal to a raw string literal.,OPEN,2min,2min,trevor.bakker@uta.edu,since-c++11,2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d-Q6D22xePu4wSd,cpp:S3806,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,36,non-portable path to file '<Windows.h>'; specified path differs in case from file name on disk,OPEN,5min,5min,trevor.bakker@uta.edu,pitfall,2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d-Q6D22xePu4wSi,cpp:S5945,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,149,"Use ""std::string"" instead of a C-style char array.",OPEN,10min,10min,trevor.bakker@uta.edu,"bad-practice,clumsy,cppcoreguidelines",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d-Q6D22xePu4wSk,cpp:S6495,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,173,"""std::print"" or ""std::format"" should be used instead of standard output manipulators",OPEN,5min,5min,trevor.bakker@uta.edu,"clumsy,performance,since-c++20",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d-Q6D22xePu4wSt,cpp:S5945,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,302,"Use ""std::string"" instead of a C-style char array.",OPEN,10min,10min,trevor.bakker@uta.edu,"bad-practice,clumsy,cppcoreguidelines",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d-Q6D22xePu4wSe,cpp:S1874,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,315,"'getenv' is deprecated: This function or variable may be unsafe. Consider using _dupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.",OPEN,15min,15min,trevor.bakker@uta.edu,"cert,cwe,obsolete",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d-Q6D22xePu4wSv,cpp:S6003,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,328,"Replace this use of ""push_back"" with ""emplace_back"".",OPEN,2min,2min,trevor.bakker@uta.edu,"clumsy,performance,since-c++11",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d-Q6D22xePu4wSw,cpp:S6003,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,329,"Replace this use of ""push_back"" with ""emplace_back"".",OPEN,2min,2min,trevor.bakker@uta.edu,"clumsy,performance,since-c++11",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d-Q6D22xePu4wSx,cpp:S6004,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,405,"Use the init-statement to declare ""normalizedPath"" inside the if statement.",OPEN,2min,2min,trevor.bakker@uta.edu,"clumsy,since-c++17",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d-Q6D22xePu4wSy,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,405,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,trevor.bakker@uta.edu,"clumsy,since-c++23",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d-Q6D22xePu4wS9,cpp:S5945,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,527,"Use ""std::string"" instead of a C-style char array.",OPEN,10min,10min,trevor.bakker@uta.edu,"bad-practice,clumsy,cppcoreguidelines",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d-Q6D22xePu4wS8,cpp:S6494,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,528,"Use ""std::format"" or ""std::format_to_n"" instead of ""snprintf"".",OPEN,10min,10min,trevor.bakker@uta.edu,"bad-practice,since-c++20",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d-Q6D22xePu4wTA,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,610,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,trevor.bakker@uta.edu,"clumsy,since-c++23",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d-Q6D22xePu4wTB,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,611,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,trevor.bakker@uta.edu,"clumsy,since-c++23",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d-Q6D22xePu4wTC,cpp:S7034,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/common/Utils.cpp,Heimdall-SBOM_heimdall,src/common/Utils.cpp,617,"Use ""contains"" instead of ""find"".",OPEN,10min,10min,trevor.bakker@uta.edu,"clumsy,since-c++23",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d-d6D22xePu4wTx,cpp:S6197,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/gold/GoldAdapter.cpp,Heimdall-SBOM_heimdall,src/gold/GoldAdapter.cpp,51,"Replace with the version of ""std::ranges::find"" that takes a range.",OPEN,2min,2min,trevor.bakker@uta.edu,"bad-practice,clumsy,since-c++20",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d-h6D22xePu4wT2,cpp:S5421,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/gold/GoldPlugin.cpp,Heimdall-SBOM_heimdall,src/gold/GoldPlugin.cpp,30,Global variables should be const.,OPEN,20min,20min,trevor.bakker@uta.edu,"bad-practice,cppcoreguidelines,pitfall",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d-U6D22xePu4wTT,cpp:S6197,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/lld/LLDAdapter.cpp,Heimdall-SBOM_heimdall,src/lld/LLDAdapter.cpp,90,"Replace with the version of ""std::ranges::find"" that takes a range.",OPEN,2min,2min,trevor.bakker@uta.edu,"bad-practice,clumsy,since-c++20",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d-Z6D22xePu4wTW,cpp:S5421,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/lld/LLDPlugin.cpp,Heimdall-SBOM_heimdall,src/lld/LLDPlugin.cpp,42,Global variables should be const.,OPEN,20min,20min,trevor.bakker@uta.edu,"bad-practice,cppcoreguidelines,pitfall",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZf0SG89amoZJ6FAQuVl,cpp:S6197,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/lld/LLDPlugin.cpp,Heimdall-SBOM_heimdall,src/lld/LLDPlugin.cpp,135,"Replace with the version of ""std::ranges::find"" that takes a range.",OPEN,2min,2min,trevor.bakker@uta.edu,"bad-practice,clumsy,since-c++20",2025-07-05T00:03:59+0000,2025-07-10T11:59:39+0000,
AZf0SG89amoZJ6FAQuVk,cpp:S134,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:src/lld/LLDPlugin.cpp,Heimdall-SBOM_heimdall,src/lld/LLDPlugin.cpp,209,Refactor this code to not nest more than 3 if|for|do|while|switch statements.,OPEN,10min,10min,trevor.bakker@uta.edu,brain-overload,2025-07-05T00:03:59+0000,2025-07-10T11:59:39+0000,
AZf0SG89amoZJ6FAQuVo,cpp:S125,MAJOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/lld/LLDPlugin.cpp,Heimdall-SBOM_heimdall,src/lld/LLDPlugin.cpp,232,Remove the commented out code.,OPEN,5min,5min,trevor.bakker@uta.edu,"based-on-misra,unused",2025-07-05T00:03:59+0000,2025-07-10T11:59:39+0000,
AZff4d-Z6D22xePu4wTt,cpp:S3471,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:src/lld/LLDPlugin.cpp,Heimdall-SBOM_heimdall,src/lld/LLDPlugin.cpp,353,"Drop the ""virtual"" specifier; it is redundant.",OPEN,5min,5min,trevor.bakker@uta.edu,"api-design,cppcoreguidelines,since-c++11",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d1P6D22xePu4v4R,cpp:S3656,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_component_info.cpp,Heimdall-SBOM_heimdall,tests/test_component_info.cpp,23,"Member variables should not be ""protected"".",OPEN,20min,20min,trevor.bakker@uta.edu,"based-on-misra,cppcoreguidelines,pitfall",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d1P6D22xePu4v4T,cpp:S6177,MINOR,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_component_info.cpp,Heimdall-SBOM_heimdall,tests/test_component_info.cpp,127,"Reduce verbosity with ""using enum"" for ""heimdall::FileType"".",OPEN,2min,2min,trevor.bakker@uta.edu,since-c++20,2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d7m6D22xePu4wNc,cpp:S3656,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_metadata_extractor.cpp,Heimdall-SBOM_heimdall,tests/test_metadata_extractor.cpp,26,"Member variables should not be ""protected"".",OPEN,20min,20min,trevor.bakker@uta.edu,"based-on-misra,cppcoreguidelines,pitfall",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d486D22xePu4v5C,cpp:S3656,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_sbom_generator.cpp,Heimdall-SBOM_heimdall,tests/test_sbom_generator.cpp,25,"Member variables should not be ""protected"".",OPEN,20min,20min,trevor.bakker@uta.edu,"based-on-misra,cppcoreguidelines,pitfall",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
AZff4d5A6D22xePu4v5E,cpp:S3656,CRITICAL,CODE_SMELL,Heimdall-SBOM_heimdall:tests/test_utils.cpp,Heimdall-SBOM_heimdall,tests/test_utils.cpp,24,"Member variables should not be ""protected"".",OPEN,20min,20min,trevor.bakker@uta.edu,"based-on-misra,cppcoreguidelines,pitfall",2025-07-05T00:03:59+0000,2025-07-06T13:14:37+0000,
